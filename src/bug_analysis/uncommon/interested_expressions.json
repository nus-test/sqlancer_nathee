[
  {
    "category": "E01",
    "comment": "This bug report revealed a security vulnerability that was fixed in a Critical Patch Update (CVSSv3.0 Base Score: 4.9)",
    "cve": "CVE-2019-2879",
    "date": "23/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "DROP DATABASE IF EXISTS test;",
      "CREATE DATABASE test;",
      "USE test;",
      "CREATE TABLE t0(c0 INT);",
      "CREATE INDEX i0 ON t0((t0.c0 || 1));",
      "INSERT INTO t0(c0) VALUES(1);",
      "CHECK TABLE t0 FOR UPGRADE; -- results in a segfault when executed with multiple threads"
    ],
    "title": "CHECK TABLE FOR UPGRADE crashes server (segfault)"
  },
  {
    "date": "22/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95927" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": ["SELECT FALSE XOR '0.5'; -- expected: 1, actual: 0"],
    "title": "XOR operator returns incorrect result for strings with a floating-point number",
    "category": "E01"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95958" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(\"0.5\");",
      "SELECT * FROM t0 WHERE t0.c0 AND 1; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 OR 0; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 XOR 0;  -- expected: 0.5, actual: no row is fetched"
    ],
    "title": "AND/OR/XOR compute wrong result for small floating-point numbers in TEXT columns",
    "category": "E01"
  },

  {
    "category": "E02",
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95960" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT '\\n1' & 1; -- expected: 1, actual: 0",
      "SELECT '\\n1' | 0; -- expected: 1, actual: 0",
      "SELECT '\\n1' ^ 1; -- expected: 0, actual: 1"
    ],
    "title": "The logical operators &, |, and ^ do not ignore newlines in TEXT"
  },
  {
    "comment": "This issue was classified as \"severe\", was since 2013 in SQLite, and was a bug in the theorem prover.",
    "date": "4/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=5c6955204c",
      "email": "https://www.mail-archive.com/sqlite-users@mailinglists.sqlite.org/msg115136.html",
      "fix": "https://www.sqlite.org/src/info/c2e439bccc40825e211bf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX index_0 ON t0(c0) WHERE (~c0) NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched"
    ],
    "title": "Incorrect result on a table scan of a partial index",
    "category": "E02"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95960" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT '\\n1' & 1; -- expected: 1, actual: 0",
      "SELECT '\\n1' | 0; -- expected: 1, actual: 0",
      "SELECT '\\n1' ^ 1; -- expected: 0, actual: 1"
    ],
    "title": "The logical operators &, |, and ^ do not ignore newlines in TEXT",
    "category": "E02"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95983" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES(-1, \"a\");",
      "SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1; -- expected: fetches row, actual: does not fetch the row"
    ],
    "title": "Query involving &, <, and AND operators computes incorrect result",
    "category": "E02"
  },
  {
    "date": "26/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "email": "https://bugs.mysql.com/bug.php?id=96012" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES (\"a\");",
      "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Query with GREATEST function malfunctions",
    "category": "E02"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95960" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT '\\n1' & 1; -- expected: 1, actual: 0",
      "SELECT '\\n1' | 0; -- expected: 1, actual: 0",
      "SELECT '\\n1' ^ 1; -- expected: 0, actual: 1"
    ],
    "title": "The logical operators &, |, and ^ do not ignore newlines in TEXT",
    "category": "E02"
  },
  {
    "date": "29/07/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ba2f4585cf",
      "fix": "https://www.sqlite.org/src/info/2b221bb15fd2b9f6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 REAL, c1);",
      "CREATE UNIQUE INDEX i0 ON t0(c1, 0 | c0);",
      "INSERT INTO t0(c0) VALUES (4750228396194493326), (0);",
      "UPDATE OR REPLACE t0 SET c0 = 'a', c1 = '';",
      "SELECT * FROM t0 ORDER BY t0.c1; -- unexpected: database disk image is malformed"
    ],
    "title": "Query with ORDER BY results in \"database disk image is malformed\" error",
    "category": "E02"
  },

  {
    "category": "E03",
    "date": "26/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "email": "https://bugs.mysql.com/bug.php?id=96012" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES (\"a\");",
      "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Query with GREATEST function malfunctions"
  },
  {
    "comment": "The bug highlights a conceptual issue in SQLite and cannot be fixed without breaking backward compatibility. The issue received its own name, namely the \"WITHOUT ROWID DESC PRIMARY KEY UNIQUE constraint index anomaly\". Nevertheless, as stated in the bug report, it is unlikely that real-world applications are affected.",
    "date": "13/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=bba7b69f98",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084528.html",
      "fix": "https://www.sqlite.org/src/info/f7aadfab3bb8eb8e"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 PRIMARY KEY DESC, c1 UNIQUE DEFAULT NULL) WITHOUT ROWID;",
      "INSERT INTO t0(c0) VALUES (1), (2), (3), (4), (5);",
      "REINDEX;",
      "SELECT * FROM t0 WHERE t0.c0 IN (SELECT c0 FROM t0) AND t0.c1 ISNULL; -- fetches only one row instead of all five rows"
    ],
    "title": "REINDEX causes rows not to be fetched in a WITHOUT ROWIDs table and PRIMARY KEY DESC",
    "category": "E03"
  },
  {
    "comment": "This bug was fixed 11 years after it was introduced.",
    "date": "03/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=71e183cab6",
      "fix": "https://www.sqlite.org/src/info/d465c3ee"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1);",
      "CREATE INDEX i0 ON t0(c1, c1 + 1 DESC);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT MIN(t0.c1), t0.c0 FROM t0 WHERE t0.c1 ISNULL; -- expected: NULL | 1, actual: NULL | NULL"
    ],
    "title": "MIN() malfunctions for a query with ISNULL condition",
    "category": "E03"
  },
  {
    "date": "30/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=7f39060a24",
      "fix": "https://www.sqlite.org/src/info/4066a34da7bcdcec"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 ISNULL;",
      "INSERT INTO t0(c0) VALUES (1);",
      "INSERT INTO t1(c0) VALUES (1);",
      "SELECT * FROM t1 LEFT JOIN t0 WHERE t0.c0 ISNULL; -- unexpected: row is fetched"
    ],
    "title": "LEFT JOIN malfunctions with partial ISNULL index",
    "category": "E03"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=8bf76328ac",
      "docs fix": "https://www.sqlite.org/docsrc/info/c3ab325994a8f495"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 NOT NULL);",
      "INSERT INTO rt0(c3) VALUES(NULL); -- unexpected: inserting NULL succeeds",
      "SELECT 0 in (rt0.c3) ISNULL FROM rt0; -- expected: 1, actual: 0"
    ],
    "title": "NOT NULL auxiliary column in rtree table malfunctions",
    "category": "E03"
  },
  {
    "date": "1/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/info/3be1295b264be2fa",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084326.html",
      "fix": "https://www.sqlite.org/src/info/713caa382cf7ddef"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0, c1 TEXT);",
      "CREATE UNIQUE INDEX IF NOT EXISTS index_0 ON test(c1 == FALSE);",
      "CREATE INDEX IF NOT EXISTS index_1 ON test(c0 || FALSE) WHERE c1;",
      "INSERT OR IGNORE INTO test(c0, c1) VALUES ('a', TRUE);",
      "INSERT OR IGNORE INTO test(c0, c1) VALUES ('a', FALSE);",
      "PRAGMA legacy_file_format=true;",
      "REINDEX; -- Error: UNIQUE constraint failed: index 'index_0'"
    ],
    "title": "Multi-row insert circumvents index check",
    "category": "E03"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/d60b3cd7cb0bdff8ff39f76c9faf16ba2efa442f",
      "fix": "https://www.sqlite.org/docsrc/info/722f0828b3074e89"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT ((CAST(1 as INT)) COLLATE BINARY) == '1'; -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression has an affinity",
    "category": "E03"
  },
  {
    "date": "08/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b92e5e8ec2",
      "fix": "https://www.sqlite.org/src/info/9d75e1ccc72e9f53"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS (1), c1);",
      "CREATE TABLE t1(c0);",
      "SELECT * FROM t0, t1 WHERE t0.c0 == 0; -- out of memory"
    ],
    "title": "Query on table without rows and generated column results in \"out of memory\" error",
    "category": "E03"
  },
  {
    "date": "04/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=727074e2ae",
      "fix": "https://www.sqlite.org/src/info/74ef6f2b6d9f50ff"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE stat USING dbstat;",
      "SELECT * FROM stat WHERE stat.aggregate == NULL; -- unexpected: row is fetched"
    ],
    "title": "DBSTAT query computes incorrect result for aggregate column",
    "category": "E03"
  },
  {
    "comment": "This bug uncovered that the compiler somtimes confuses x IS TRUE with x IS FALSE, and the other way around.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d3e7f2ba5b",
      "fix": "https://www.sqlite.org/src/info/99eba69b3a64741c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES ('val');",
      "SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE OR (t0.c0 IN (-1)))) IS 0); -- fetches no row"
    ],
    "title": "Nested boolean formula with IN operator computes an incorrect result",
    "category": "E03"
  },
  {
    "date": "21/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b86894020e",
      "fix": "https://www.sqlite.org/src/info/d02490a2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 NOT NULL DEFAULT 1, c2, PRIMARY KEY (c0, c1));",
      "INSERT INTO t0(c2) VALUES (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL);",
      "INSERT INTO t0(c2) VALUES ('a');",
      "ANALYZE t0;",
      "SELECT DISTINCT * FROM t0 WHERE NULL IS t0.c0; -- unexpected: |1|a is not part of the result set"
    ],
    "title": "DISTINCT malfunctions for IS NULL",
    "category": "E03"
  },
  {
    "comment": "This bug was classified as \"critical\" and was in SQLite since 2013.",
    "date": "11/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview/80256748471a01",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084499.html",
      "fix": "https://sqlite.org/src/info/0ba6d709"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE IF NOT EXISTS t0 (c0);",
      "CREATE INDEX IF NOT EXISTS i0 ON t0(1) WHERE c0 NOT NULL;",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE t0.c0 IS NOT 1; -- returns no row"
    ],
    "title": "Partial NOT NULL index malfunctions with IS NOT/!=",
    "category": "E03"
  },
  {
    "comment": "Note that this was not a bug in the code. Rather, the documentation was not very clear on this is.",
    "date": "2/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084347.html"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE TABLE test (c0 NOT NULL);",
      "INSERT INTO test(c0) VALUES (NULL) ON CONFLICT DO NOTHING; -- results in an error",
      "INSERT OR IGNORE INTO test(c0) VALUES (NULL); -- does not result in an error"
    ],
    "title": "UPSERT documentation issue",
    "category": "E03"
  },
  {
    "comment": "This issue was classified as \"severe\", was since 2013 in SQLite, and was a bug in the theorem prover.",
    "date": "4/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=5c6955204c",
      "email": "https://www.mail-archive.com/sqlite-users@mailinglists.sqlite.org/msg115136.html",
      "fix": "https://www.sqlite.org/src/info/c2e439bccc40825e211bf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX index_0 ON t0(c0) WHERE (~c0) NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched"
    ],
    "title": "Incorrect result on a table scan of a partial index",
    "category": "E03"
  },
  {
    "comment": "This bug was classified as \"critical\" and was in SQLite since 2013.",
    "date": "11/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview/80256748471a01",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084499.html",
      "fix": "https://sqlite.org/src/info/0ba6d709"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE IF NOT EXISTS t0 (c0);",
      "CREATE INDEX IF NOT EXISTS i0 ON t0(1) WHERE c0 NOT NULL;",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE t0.c0 IS NOT 1; -- returns no row"
    ],
    "title": "Partial NOT NULL index malfunctions with IS NOT/!=",
    "category": "E03"
  },
  {
    "date": "10/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=9080b6227f",
      "fix": "https://www.sqlite.org/src/info/da01ba4fa47c6508"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE INDEX i0 ON t0(NULL > c0) WHERE (NULL NOT NULL);",
      "SELECT * FROM t0 WHERE ((NULL IS FALSE) IS FALSE); -- expected: row is fetched: actual: row is not fetched"
    ],
    "title": "Constant expression in partial index results in row not being fetched",
    "category": "E03"
  },
  {
    "date": "21/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b86894020e",
      "fix": "https://www.sqlite.org/src/info/d02490a2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 NOT NULL DEFAULT 1, c2, PRIMARY KEY (c0, c1));",
      "INSERT INTO t0(c2) VALUES (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL);",
      "INSERT INTO t0(c2) VALUES ('a');",
      "ANALYZE t0;",
      "SELECT DISTINCT * FROM t0 WHERE NULL IS t0.c0; -- unexpected: |1|a is not part of the result set"
    ],
    "title": "DISTINCT malfunctions for IS NULL",
    "category": "E03"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a6408d42b9",
      "fix": "https://www.sqlite.org/src/info/45ff2b1f2693bb02"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;",
      "SELECT * FROM t0 WHERE (t0.c0 IS FALSE) IS FALSE; -- unexpected: row is not fetched"
    ],
    "title": "Partial index causes row to not be fetched",
    "category": "E03"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f8f472cbc7",
      "fix": "https://www.sqlite.org/src/info/dd66134817ecbda0"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE '' BETWEEN t0.c0 AND 1 IN (FALSE); -- unexpected: row is not fetched"
    ],
    "title": "Partial index and BETWEEN issue",
    "category": "E03"
  },
  {
    "date": "25/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c1e19e1204",
      "fix": "https://www.sqlite.org/src/info/fbac0c65d8464b12"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "PRAGMA temp.recursive_triggers = true;",
      "CREATE TABLE t0(c0, c1 UNIQUE);",
      "CREATE TRIGGER c BEFORE DELETE ON t0;",
      "BEGIN INSERT INTO t0(c1) VALUES(1);",
      "END;",
      "INSERT INTO t0(c1) VALUES(0);",
      "REPLACE INTO t0(c1) VALUES (0);",
      "SELECT t0.c1 BETWEEN 0 AND (CASE WHEN 1 THEN 1 ELSE t0.c0 END NOT NULL) FROM t0; -- expected: 1 and 1, actual: 1"
    ],
    "title": "Trigger causes query to compute incorrect result",
    "category": "E03"
  },
  {
    "date": "29/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=9621dd78a0",
      "fix": "https://sqlite.org/src/info/361ea81ae8a13e7d"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA temp_store = MEMORY;",
      "CREATE TEMP TABLE t0(c0, c1 AS(1) CHECK(NULL) UNIQUE NOT NULL, c2 CHECK(1.0) PRIMARY KEY) WITHOUT ROWID;",
      "CREATE UNIQUE INDEX e ON t0(CAST(0.0 AS INT)) WHERE 0;",
      "REINDEX;",
      "INSERT INTO t0(c2) VALUES (0), (1);",
      "REPLACE INTO t0(c2, c0) VALUES (0, 0), (x'9b', NULL);",
      "UPDATE t0 SET c2 = 0; -- Segmentation fault"
    ],
    "title": "Segfault when updating table with generated columns",
    "category": "E03"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=2399f59861",
      "fix": "https://sqlite.org/src/info/77b1c90add514050"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL AS(c1), c1);",
      "REPLACE INTO t0(c1) VALUES(NULL); -- Segmentation fault"
    ],
    "title": "REPLACE on table with generated NOT NULL column results in segfault",
    "category": "E03"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=4fc08501f4",
      "fix": "https://www.sqlite.org/src/info/9e07b48934e9a972"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS ((c4, 9, c4) < ('a', c1, 1)), c1 AS (1) NOT NULL, c2, c3 CHECK  ((x'56', 0) = (c1, 0)), c4 NOT NULL);",
      "PRAGMA integrity_check;",
      "INSERT INTO t0 VALUES (0, 0, 0), (0, 0, 0); -- unexpected: Segmentation fault"
    ],
    "title": "Segfault when inserting into table with generated columns",
    "category": "E03"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=8bf76328ac",
      "docs fix": "https://www.sqlite.org/docsrc/info/c3ab325994a8f495"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 NOT NULL);",
      "INSERT INTO rt0(c3) VALUES(NULL); -- unexpected: inserting NULL succeeds",
      "SELECT 0 in (rt0.c3) ISNULL FROM rt0; -- expected: 1, actual: 0"
    ],
    "title": "NOT NULL auxiliary column in rtree table malfunctions",
    "category": "E03"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": { "fix": "https://www.sqlite.org/src/info/27c0fdab1ba4d499" },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA cache_size = 100000;",
      "PRAGMA foreign_keys = true;",
      "CREATE TEMP TABLE t0(c0, c1 INTEGER PRIMARY KEY AUTOINCREMENT CHECK (c0), c2 BLOB NOT NULL CHECK (LTRIM(1)) UNIQUE DEFAULT '0000000000000');",
      "COLLATE BINARY, c3 BLOB UNIQUE NOT NULL ON CONFLICT ABORT CHECK ((''IN (c0, NULL, c1))) GENERATED ALWAYS AS (1), FOREIGN KEY(c1) REFERENCES t0(c2) ON DELETE CASCADE);",
      "CREATE UNIQUE INDEX i0 ON t0(0, 0, 0);",
      "CREATE UNIQUE INDEX i1 ON t0(0, 0, 0);",
      "CREATE UNIQUE INDEX i2 ON t0(0, 0, c1);",
      "CREATE UNIQUE INDEX i3 ON t0(0, 0, c1);",
      "CREATE UNIQUE INDEX i4 ON t0(c0, 0, c2);",
      "CREATE INDEX i5 ON t0(0, CASE WHEN 1 THEN 1 WHEN c2 THEN c1 END, 0);",
      "VACUUM;",
      "INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0); -- segfault"
    ],
    "title": "Generated column and foreign key causes a segfault",
    "category": "E03"
  },
  {
    "date": "09/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=bd8c280671",
      "fix": "https://www.sqlite.org/src/info/f3b39c71b88cb672"
    },
    "oracle": "hang",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 NOT NULL GENERATED ALWAYS AS (c0 = 0));",
      "INSERT INTO t0(c0) VALUES (0);",
      "PRAGMA integrity_check; -- hangs"
    ],
    "title": "PRAGMA integrity_check does not terminate on table with generated column",
    "category": "E03"
  },
  {
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=37823501c6",
      "fix": "https://www.sqlite.org/src/info/4cc12c18860bc480"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL DEFAULT '', c1 AS(c0) NOT NULL);",
      "REPLACE INTO t0(c0) VALUES(NULL); -- sqlite3.c:85112: sqlite3VdbeExec: Assertion `memIsValid(&aMem[pOp->p1])' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(&aMem[pOp->p1])' failed.",
    "category": "E03"
  },
  {
    "comment": "According to the SQLite developers, this bug report revealed a subtle problem n the new (unreleased) generated columns feature.",
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=5fbc159eeb",
      "fix": "https://sqlite.org/src/info/4cc12c18860bc480"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL DEFAULT 1, c1 AS(c0) UNIQUE);",
      "REPLACE INTO t0 VALUES(NULL); -- sqlite3.c:87334: sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed",
    "category": "E03"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=fba33c8b1d",
      "fix": "https://www.sqlite.org/src/info/057fb8b1809b8b9c"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1);",
      "CREATE INDEX i0 ON t0(1) WHERE c1 NOTNULL;",
      "INSERT INTO t0(c1) VALUES (NULL);",
      "SELECT * FROM t0 WHERE t0.c1 IS FALSE BETWEEN FALSE AND TRUE; -- unexpected: row is not fetched"
    ],
    "title": "Partial index causes row to not be fetched in BETWEEN expression",
    "category": "E03"
  },
  {
    "date": "10/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c31034044b",
      "fix": "https://www.sqlite.org/src/info/7833feecfe745e23"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c1);",
      "INSERT INTO t0(c0) VALUES(0);",
      "CREATE VIEW v0(c0) AS SELECT t1.c1 FROM t0 LEFT JOIN t1;",
      "SELECT * FROM v0 WHERE v0.c0 NOTNULL NOTNULL; -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "LEFT JOIN in view malfunctions with NOTNULL",
    "category": "E03"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=b0cb8aff56",
      "fix": "https://sqlite.org/src/info/56539e1c132632c0"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0((c0 NOTNULL) COLLATE BINARY);",
      "SELECT * FROM t0 WHERE(c0 NOTNULL) COLLATE BINARY BETWEEN 0 AND c0; -- sqlite3.c:98025: sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed."
    ],
    "title": "Debug assertion sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed",
    "category": "E03"
  },

  {
    "category": "E04",
    "date": "10/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084497.html",
      "fix": "https://www.sqlite.org/src/info/db9acef14d492121"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT 1e500 >= 1,  CAST(1e500 AS INT) >= CAST(1 AS INT), ROUND(1e500) >= ROUND(1); -- 1|1|0"
    ],
    "title": "Incorrect handling of Infinity by the ROUND function"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/d60b3cd7cb0bdff8ff39f76c9faf16ba2efa442f",
      "fix": "https://www.sqlite.org/docsrc/info/722f0828b3074e89"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT ((CAST(1 as INT)) COLLATE BINARY) == '1'; -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression has an affinity",
    "category": "E04"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities",
    "category": "E04"
  },
  {
    "date": "07/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f8a7060ece",
      "fix": "https://www.sqlite.org/src/info/94085fb3"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE, c1);",
      "INSERT INTO t0(c1) VALUES (0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE VIEW v0(c0, c1) AS SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS INT) = 1;",
      "SELECT v0.c0, MIN(v0.c1) FROM v0; -- expected: 0|, actual: |"
    ],
    "title": "Incorrect result for query that uses MIN() and a CAST on rowid",
    "category": "E04"
  },
  {
    "date": "29/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=9621dd78a0",
      "fix": "https://sqlite.org/src/info/361ea81ae8a13e7d"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA temp_store = MEMORY;",
      "CREATE TEMP TABLE t0(c0, c1 AS(1) CHECK(NULL) UNIQUE NOT NULL, c2 CHECK(1.0) PRIMARY KEY) WITHOUT ROWID;",
      "CREATE UNIQUE INDEX e ON t0(CAST(0.0 AS INT)) WHERE 0;",
      "REINDEX;",
      "INSERT INTO t0(c2) VALUES (0), (1);",
      "REPLACE INTO t0(c2, c0) VALUES (0, 0), (x'9b', NULL);",
      "UPDATE t0 SET c2 = 0; -- Segmentation fault"
    ],
    "title": "Segfault when updating table with generated columns",
    "category": "E04"
  },
  {
    "date": "31/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=46fcd700b8",
      "fix": "https://www.sqlite.org/src/info/eca7ec9cda4606c4"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA foreign_keys = true;",
      "CREATE TABLE t0(c0 TEXT PRIMARY KEY, c1 INT UNIQUE REFERENCES t0 CHECK(CAST(c1 AS INT) BETWEEN 0 AND CASE WHEN 1 THEN c0 END));",
      "REPLACE INTO t0(c0, c1) VALUES(0.7675826647230917, 0), (0, x''); -- sqlite3.c:75952: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed (2)",
    "category": "E04"
  },
  {
    "date": "08/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=82ac75ba00",
      "fix": "https://www.sqlite.org/src/info/6db1c3498f6bfa01"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0 VALUES('0');",
      "CREATE VIEW v0(c0) AS SELECT CAST(0 AS INT) FROM t0;",
      "SELECT * FROM t0, v0 WHERE 0 >= t0.c0 AND t0.c0 = v0.c0; -- unexpected: fetches row"
    ],
    "title": "Incorrect result for query with 0 >= t0.c0 AND t0.c0 = v0.c0 condition",
    "category": "E04"
  },
  {
    "date": "25/04/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=45f4bf4eb4",
      "fix": "https://www.sqlite.org/src/info/ac31edd3eeafcef4"
    },
    "oracle": "TLP (DISTINCT)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE VIEW v0(c0) AS SELECT CAST(t0.c0 AS INTEGER) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 LEFT JOIN v0 ON v0.c0 >= '0' WHERE TRUE UNION SELECT 0,0 WHERE 0; -- expected: {0|0}, actual:{0|NULL}"
    ],
    "title": "UNION operator malfunctions in LEFT JOIN on view",
    "category": "E04"
  },
  {
    "date": "17/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA5Hp0ra235F3czPom_FyAd-3%2BXwSJmX95r1%2BsRPOJc9VQ%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/a904abe2e284f570168839e52e18ef0b7f26179d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER , c1 BOOLEAN);",
      "INSERT INTO t0(c0, c1) VALUES(1369652450, FALSE), (414515746, TRUE), (897778963, FALSE);",
      "CREATE UNIQUE INDEX i0 ON t0((1 / t0.c0)) WHERE ('-H') >= (t0.c1::TEXT) COLLATE \"C\";",
      "REINDEX TABLE CONCURRENTLY t0;",
      "ALTER TABLE t0 ALTER c1 TYPE TEXT; -- could not create unique index \"i0\" DETAIL:  Key ((1 / c0))=(0) is duplicated."
    ],
    "title": "REINDEX CONCURRENTLY causes ALTER TABLE to fail",
    "version": "13trunk",
    "category": "E04"
  },
  {
    "date": "02/12/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA5TwqWTrvRoFOF1Vipf5WpfcbQYwtLGzNVXGwa6Ptor9w%40mail.gmail.com"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT COLLATE \"POSIX\");",
      "CREATE VIEW v0(c0) AS (SELECT (t0.c0 COLLATE \"C\")::INT FROM t0); -- FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)"
    ],
    "title": "FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)",
    "category": "E04"
  },

  {
    "category": "E06",
    "date": "2/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084350.html",
      "fix": "https://www.sqlite.org/src/info/48889530a9de22fe"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0 REAL);",
      "CREATE UNIQUE INDEX index_0 ON test(TYPEOF(c0));",
      "INSERT OR IGNORE INTO test(c0) VALUES (0.1);",
      "INSERT OR IGNORE INTO test(c0) VALUES (FALSE);",
      "REINDEX; -- UNIQUE constraint failed: index 'index_0'"
    ],
    "title": "TYPEOF index on REAL column malfunctions"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=6710d2f7a1",
      "fix": "https://www.sqlite.org/src/info/500c9152daaf11cf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT TYPEOF(1) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0), (1);",
      "SELECT * FROM t0 LEFT JOIN v0 ON t0.c0 WHERE NOT(v0.c0 = 'a'); -- unexpected: fetches no row"
    ],
    "title": "LEFT JOIN fails to fetch row",
    "category": "E06"
  },
  {
    "date": "31/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=1d2a8efc6c",
      "fix": "https://sqlite.org/src/info/329820673a12ff6a"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(TYPEOF(c1)), c1);",
      "INSERT INTO t0(c1) VALUES(0);",
      "VACUUM; -- table vacuum_db.t0 has 1 columns but 2 values were supplied"
    ],
    "title": "VACUUM on table with generated column that uses TYPEOF results in an error",
    "category": "E06"
  },
  {
    "date": "14/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b439bfcfb7",
      "fix": "https://www.sqlite.org/src/info/2401e04730a156aa"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(1 >= 1), c1 UNIQUE AS(TYPEOF(c0)), c2);",
      "CREATE VIRTUAL TABLE t1 USING fts4;",
      "INSERT INTO t0 VALUES(0);",
      "REINDEX; -- segfault"
    ],
    "title": "REINDEX segfaults on table with generated columns",
    "category": "E06"
  },

  {
    "category": "E07",
    "date": "05/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=fa146dcfe6",
      "fix": "https://www.sqlite.org/docsrc/info/e751b0c91a80dd31"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 1) COLLATE NOCASE as a UNION SELECT CHAR(0, 0) as a); -- 0000",
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 0) COLLATE NOCASE as a UNION SELECT CHAR(0, 1) as a); -- 0001"
    ],
    "title": "Unexpected result for MIN on string that contains a null character"
  },
  {
    "date": "05/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=fa146dcfe6",
      "fix": "https://www.sqlite.org/docsrc/info/e751b0c91a80dd31"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 1) COLLATE NOCASE as a UNION SELECT CHAR(0, 0) as a); -- 0000",
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 0) COLLATE NOCASE as a UNION SELECT CHAR(0, 1) as a); -- 0001"
    ],
    "title": "Unexpected result for MIN on string that contains a null character",
    "category": "E07"
  },
  {
    "date": "17/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=587791f926",
      "fix": "https://www.sqlite.org/src/info/3fb40f518086c1e8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 PRIMARY KEY, c1);",
      "INSERT INTO t0(c0) VALUES (x'bb'), (0);",
      "SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- 1",
      "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched"
    ],
    "title": "Row is not fetched when using WHERE clause with INSTR()",
    "category": "E07"
  },
  {
    "comment": "As described in one of the commit messages for this fix, addressing this bug required a \"big change\" in the code.",
    "date": "3/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084366.html",
      "fix": "https://www.sqlite.org/src/info/5a8a23ee5f60a31d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0 REAL);",
      "CREATE UNIQUE INDEX index_0 ON test(LENGTH(-c0));",
      "INSERT INTO test(c0) VALUES (0.0), ('10:');",
      "REINDEX; -- UNIQUE constraint failed: index 'index_0'"
    ],
    "title": "Problem with REAL values and string functions used in indexes or on expressions",
    "category": "E07"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=0911b5d161",
      "fix": "https://www.sqlite.org/src/info/f347744e0d576f02"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE t0 USING fts5(c0);",
      "INSERT INTO t0(c0) VALUES (x'00');",
      "SELECT * FROM t0 WHERE CAST(SUBSTR(c0, 0) AS TEXT) > 0; -- sqlite3.c:81076: sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed."
    ],
    "title": "Debug assertion sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed",
    "category": "E07"
  },
  {
    "date": "02/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=771fe61761",
      "fix": "https://www.sqlite.org/src/info/e782096aa06fcf41"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (SUBSTR(x'37', ''));",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS5 integrity-check results in \"database disk image is malformed\" for UTF-16 encoding and SUBSTR",
    "category": "E07"
  },
  {
    "date": "08/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9eda2697f5",
      "fix": "https://www.sqlite.org/src/info/1c76f1d8ec0937a2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16be';",
      "CREATE TABLE t0(c0, c1);",
      "INSERT INTO t0(c0) VALUES (x'00');",
      "CREATE INDEX i0 ON t0(c0 COLLATE BINARY);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT COUNT(*) FROM t0 WHERE SUBSTR(t0.c0, ','); -- expected: 1, actual: 2"
    ],
    "title": "Incorrect result for COUNT(), UTF16be encoding and SUBSTR",
    "category": "E07"
  },

  {
    "category": "E08",
    "date": "17/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA5Hp0ra235F3czPom_FyAd-3%2BXwSJmX95r1%2BsRPOJc9VQ%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/a904abe2e284f570168839e52e18ef0b7f26179d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER , c1 BOOLEAN);",
      "INSERT INTO t0(c0, c1) VALUES(1369652450, FALSE), (414515746, TRUE), (897778963, FALSE);",
      "CREATE UNIQUE INDEX i0 ON t0((1 / t0.c0)) WHERE ('-H') >= (t0.c1::TEXT) COLLATE \"C\";",
      "REINDEX TABLE CONCURRENTLY t0;",
      "ALTER TABLE t0 ALTER c1 TYPE TEXT; -- could not create unique index \"i0\" DETAIL:  Key ((1 / c0))=(0) is duplicated."
    ],
    "title": "REINDEX CONCURRENTLY causes ALTER TABLE to fail",
    "version": "13trunk"
  },
  {
    "category": "E10",
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ac184eb571",
      "fix": "https://www.sqlite.org/src/info/e62eddbb048cbc2c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT UNIQUE, c1);",
      "INSERT INTO t0(c0) VALUES (-1);",
      "SELECT * FROM t0 WHERE - x'ce' >= t0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Row with comparison on TEXT UNIQUE column is not fetched"
  },
  {
    "date": "03/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=29f635e0af",
      "fix": "https://www.sqlite.org/src/info/6e7b4527d32cc1be"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, c1 REAL, c2, PRIMARY KEY(c2, c0, c1));",
      "CREATE INDEX i0 ON t0(c1 IN (c0));",
      "INSERT INTO t0(c0, c2) VALUES (0, NULL) ON CONFLICT(c2, c1, c0) DO NOTHING;",
      "UPDATE t0 SET c2 = x'';",
      "SELECT * FROM t0 WHERE t0.c2 IS NULL; -- unexpected: row is fetched"
    ],
    "title": "IS NULL unexpectedly evaluates to TRUE",
    "category": "E10"
  },
  {
    "date": "17/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=587791f926",
      "fix": "https://www.sqlite.org/src/info/3fb40f518086c1e8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 PRIMARY KEY, c1);",
      "INSERT INTO t0(c0) VALUES (x'bb'), (0);",
      "SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- 1",
      "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched"
    ],
    "title": "Row is not fetched when using WHERE clause with INSTR()",
    "category": "E10"
  },
  {
    "date": "11/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=278ac14262",
      "fix": "https://www.sqlite.org/src/info/629e20c9880acc2c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0);",
      "INSERT INTO vt0 VALUES (x'00');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS integrity_check fails when inserting x'00'",
    "category": "E10"
  },
  {
    "date": "24/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=dd1f67bf25",
      "fix": "https://www.sqlite.org/src/info/8d964e1c21d4cea6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = \"ascii\", prefix = 1);",
      "INSERT INTO vt0(c0) VALUES (x'd1');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected error: database disk image is malformed"
    ],
    "title": "FTS integrity-check malfunctions nondeterministically with tokenize=\"ascii\"",
    "category": "E10"
  },
  {
    "date": "29/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=9621dd78a0",
      "fix": "https://sqlite.org/src/info/361ea81ae8a13e7d"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA temp_store = MEMORY;",
      "CREATE TEMP TABLE t0(c0, c1 AS(1) CHECK(NULL) UNIQUE NOT NULL, c2 CHECK(1.0) PRIMARY KEY) WITHOUT ROWID;",
      "CREATE UNIQUE INDEX e ON t0(CAST(0.0 AS INT)) WHERE 0;",
      "REINDEX;",
      "INSERT INTO t0(c2) VALUES (0), (1);",
      "REPLACE INTO t0(c2, c0) VALUES (0, 0), (x'9b', NULL);",
      "UPDATE t0 SET c2 = 0; -- Segmentation fault"
    ],
    "title": "Segfault when updating table with generated columns",
    "category": "E10"
  },
  {
    "date": "4/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=02aa2bd02f",
      "fix": "https://sqlite.org/src/info/ea20068e6d97c934"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t1 LEFT JOIN t0;",
      "INSERT INTO t1(c0) VALUES (0);",
      "SELECT * FROM v0 WHERE (v0.c0, x'') != (NULL, 0); -- unexpected: row is not fetched"
    ],
    "title": "Row value comparison malfunctions on view with left join",
    "category": "E10"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=4fc08501f4",
      "fix": "https://www.sqlite.org/src/info/9e07b48934e9a972"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS ((c4, 9, c4) < ('a', c1, 1)), c1 AS (1) NOT NULL, c2, c3 CHECK  ((x'56', 0) = (c1, 0)), c4 NOT NULL);",
      "PRAGMA integrity_check;",
      "INSERT INTO t0 VALUES (0, 0, 0), (0, 0, 0); -- unexpected: Segmentation fault"
    ],
    "title": "Segfault when inserting into table with generated columns",
    "category": "E10"
  },
  {
    "date": "05/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9fe487ba3c",
      "fix": "https://www.sqlite.org/src/info/7ae8c0d52f6aa7f2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, a, b);",
      "CREATE VIRTUAL TABLE rt1 USING rtree(c0, a, b);",
      "INSERT INTO rt1(c0) VALUES (x'00');",
      "INSERT INTO rt0(c0) VALUES ('a');",
      "SELECT * FROM rt1, rt0 WHERE rt0.c0 = CAST(rt1.c0 AS TEXT); -- unexpected: row is fetched"
    ],
    "title": "Join on two rtree tables malfunctions",
    "category": "E10"
  },
  {
    "date": "11/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=cf36cb4e02",
      "commit": "https://www.sqlite.org/src/info/c16305eba0eb1436"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (x'46f0');",
      "UPDATE vt0 SET c0=NULL;",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for UTF-16 encoding after update",
    "category": "E10"
  },
  {
    "date": "20/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=e431c35542",
      "commit": "https://sqlite.org/src/info/a1ba9a37d7a68a6d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (x'3078');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for UTF-16 encoding",
    "category": "E10"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=0911b5d161",
      "fix": "https://www.sqlite.org/src/info/f347744e0d576f02"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE t0 USING fts5(c0);",
      "INSERT INTO t0(c0) VALUES (x'00');",
      "SELECT * FROM t0 WHERE CAST(SUBSTR(c0, 0) AS TEXT) > 0; -- sqlite3.c:81076: sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed."
    ],
    "title": "Debug assertion sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed",
    "category": "E10"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=d62981b76d",
      "fix": "https://www.sqlite.org/src/info/a11b393dc2c882cf"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt1 USING fts5(c1, c2, prefix = 1, tokenize = \"porter ascii\");",
      "INSERT INTO vt1 VALUES (x'e4', '+\u452c+');",
      "INSERT INTO vt1(vt1) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for special characters in table",
    "category": "E10"
  },
  {
    "date": "24/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=df46a6f38e",
      "fix": "https://www.sqlite.org/src/info/1c0a05b09a97e6e2"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 71, tokenize = \"porter ascii\", prefix = 9);",
      "BEGIN;",
      "INSERT INTO vt0(c0) VALUES (x'e9');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- sqlite3.c:213028: sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed"
    ],
    "title": "Debug assertion sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed",
    "category": "E10"
  },
  {
    "date": "29/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=314cc133e5",
      "fix": "https://www.sqlite.org/src/info/db4b7e1dc399c1f1"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "PRAGMA recursive_triggers = true;",
      "CREATE TABLE t0(c0 UNIQUE ON CONFLICT REPLACE, c1, c2);",
      "CREATE INDEX i0 ON t0(c2);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE TRIGGER tr0 DELETE ON t0 BEGIN",
      "UPDATE t0 SET c2 = c0;",
      "END;",
      "INSERT INTO t0(c0, c2) VALUES(4, 0), (9, 0);",
      "UPDATE t0 SET c0 = 0;",
      "SELECT * FROM t0 WHERE x'' > t0.c2 GROUP BY c1; -- database disk image is malformed"
    ],
    "title": "Trigger on normal table causes the database disk image to become malformed",
    "category": "E10"
  },
  {
    "date": "31/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=46fcd700b8",
      "fix": "https://www.sqlite.org/src/info/eca7ec9cda4606c4"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA foreign_keys = true;",
      "CREATE TABLE t0(c0 TEXT PRIMARY KEY, c1 INT UNIQUE REFERENCES t0 CHECK(CAST(c1 AS INT) BETWEEN 0 AND CASE WHEN 1 THEN c0 END));",
      "REPLACE INTO t0(c0, c1) VALUES(0.7675826647230917, 0), (0, x''); -- sqlite3.c:75952: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed (2)",
    "category": "E10"
  },
  {
    "date": "02/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=771fe61761",
      "fix": "https://www.sqlite.org/src/info/e782096aa06fcf41"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (SUBSTR(x'37', ''));",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS5 integrity-check results in \"database disk image is malformed\" for UTF-16 encoding and SUBSTR",
    "category": "E10"
  },
  {
    "date": "08/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9eda2697f5",
      "fix": "https://www.sqlite.org/src/info/1c76f1d8ec0937a2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16be';",
      "CREATE TABLE t0(c0, c1);",
      "INSERT INTO t0(c0) VALUES (x'00');",
      "CREATE INDEX i0 ON t0(c0 COLLATE BINARY);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT COUNT(*) FROM t0 WHERE SUBSTR(t0.c0, ','); -- expected: 1, actual: 2"
    ],
    "title": "Incorrect result for COUNT(), UTF16be encoding and SUBSTR",
    "category": "E10"
  },
  {
    "date": "10/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084497.html",
      "fix": "https://www.sqlite.org/src/info/db9acef14d492121"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT 1e500 >= 1,  CAST(1e500 AS INT) >= CAST(1 AS INT), ROUND(1e500) >= ROUND(1); -- 1|1|0"
    ],
    "title": "Incorrect handling of Infinity by the ROUND function",
    "category": "E10"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c7a1171907",
      "fix": "https://www.sqlite.org/src/info/43e8b143"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT LOWER(CAST('1e500' AS TEXT)) FROM t0;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT v0.c0 FROM v0, t0 WHERE t0.rowid NOT IN (0, 0, v0.c0); -- expected: '1e500', actual: Inf"
    ],
    "title": "WHERE clause erroneously influences value of fetched column from view",
    "category": "E10"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99146" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 FLOAT UNIQUE);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE t0.c0 BETWEEN 0 AND '1e500'; -- expected: {0}, actual: {}"
    ],
    "title": "Comparison on FLOAT column and large value malfunctions",
    "category": "E10"
  },
  {
    "comment": "Although this was not recognized as a bug, the bug report resulted in a documentation update and change in the default options for SQLite's defensive configuration.",
    "date": "16/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f4ec250930",
      "fix": "https://www.sqlite.org/src/info/a0f5eb5c79cc33b7"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "PRAGMA journal_mode=OFF;",
      "PRAGMA main.cache_size=0;",
      "CREATE TABLE IF NOT EXISTS t0 (c0);",
      "CREATE INDEX i0 ON t0(1);",
      "DROP INDEX \"i0\";",
      "INSERT OR IGNORE INTO t0(c0) VALUES (1), (2);",
      "CREATE UNIQUE INDEX i0 ON t0(1); -- UNIQUE constraint failed: index 'i0'",
      "CREATE UNIQUE INDEX i0 ON t0(1); -- database disk image is malformed"
    ],
    "title": "Malformed image when using no journal mode, zero cache size, and failing when creating an index",
    "category": "E10"
  },
  {
    "comment": "This bug report resulted in a change of the accepted SQL dialect, disallowing strings in double quotes when creating indexes.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/9b78184be266fd7084e9e8038ad631a21b37eb9e",
      "fix1": "https://www.sqlite.org/src/info/1685610e",
      "fix2": "https://www.sqlite.org/src/info/3e1b55f3ab85710e"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1, c2);",
      "INSERT INTO t0(c1, c2) VALUES  ('a', 1);",
      "CREATE INDEX i0 ON t0(\"C3\");",
      "ALTER TABLE t0 RENAME COLUMN c1 TO c3;",
      "SELECT DISTINCT * FROM t0; -- fetches C3|1 rather than a|1"
    ],
    "title": "Index on non-existing column results in a fabricated value being fetched",
    "category": "E10"
  },
  {
    "date": "15/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95820" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE, c1 INT, c2 INT UNIQUE) ENGINE = MyISAM;",
      "INSERT INTO t0(c0) VALUES(DEFAULT), (\"\");",
      "INSERT IGNORE INTO t0(c2) VALUES(\"a\");",
      "REPLACE INTO t0(c1, c0, c2) VALUES(1, DEFAULT, DEFAULT), (DEFAULT, \"a\", \"a\");",
      "REPAIR TABLE t0 QUICK EXTENDED USE_FRM;",
      "SELECT * FROM t0; -- unexpected: Table 'to' is marked as crashed and last (automatic?) repair failed"
    ],
    "title": "REPAIR TABLE on a functional table marks it as crashed",
    "category": "E10"
  },
  {
    "date": "18/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95856" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE, c1 INT, c2 INT, c3 INT UNIQUE) ENGINE = MyISAM;",
      "INSERT INTO t0(c0) VALUES(DEFAULT), (\"a\");",
      "INSERT IGNORE INTO t0(c3) VALUES(\"a\"), (1);",
      "REPLACE INTO t0(c1, c0, c3) VALUES(1, 2, 3), (1, \"a\", \"a\");",
      "SELECT (NULL) IN (SELECT t0.c3 FROM t0 WHERE t0.c0);"
    ],
    "title": "\"Can't find record\" error in SELECT statement 1 (MyISAM engine)",
    "category": "E10"
  },
  {
    "date": "18/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95866" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE) ENGINE = HEAP;",
      "INSERT INTO t0(c0) VALUES (DEFAULT), (\"a\"), (\"a\");",
      "SELECT (NULL) IN (SELECT t0.c0 FROM t0 WHERE ((t0.c0) OR TRUE) IS NULL); -- unexpected: ERROR 1032 (HY000): Can't find record in 't0'"
    ],
    "title": "\"Can't find record\" error in SELECT statement 2 (HEAP engine)",
    "category": "E10"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95938" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT IGNORE INTO t0(c0) VALUES(\"\\n123\");",
      "SELECT * FROM t0 WHERE COALESCE(t0.c0); -- expected: row is fetched, actual: no row is fetched",
      "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Function return value with newline yields wrong result when used as a boolean",
    "category": "E10"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95958" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(\"0.5\");",
      "SELECT * FROM t0 WHERE t0.c0 AND 1; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 OR 0; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 XOR 0;  -- expected: 0.5, actual: no row is fetched"
    ],
    "title": "AND/OR/XOR compute wrong result for small floating-point numbers in TEXT columns",
    "category": "E10"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95964" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 INT) ENGINE = MEMORY;",
      "INSERT INTO t0(c0) VALUES(0);",
      "INSERT INTO t1(c0) VALUES(-1);",
      "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Compare that uses UNSIGNED cast and function malfunctions in the MEMORY engine",
    "category": "E10"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95975" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": ["SELECT \"a\" IN (0); -- expected: 0, actual: 1"],
    "title": "Unexpected result for IN operator and constants",
    "category": "E10"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95983" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES(-1, \"a\");",
      "SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1; -- expected: fetches row, actual: does not fetch the row"
    ],
    "title": "Query involving &, <, and AND operators computes incorrect result",
    "category": "E10"
  },
  {
    "date": "26/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "email": "https://bugs.mysql.com/bug.php?id=96012" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES (\"a\");",
      "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Query with GREATEST function malfunctions",
    "category": "E10"
  },
  {
    "date": "17/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA5Hp0ra235F3czPom_FyAd-3%2BXwSJmX95r1%2BsRPOJc9VQ%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/a904abe2e284f570168839e52e18ef0b7f26179d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER , c1 BOOLEAN);",
      "INSERT INTO t0(c0, c1) VALUES(1369652450, FALSE), (414515746, TRUE), (897778963, FALSE);",
      "CREATE UNIQUE INDEX i0 ON t0((1 / t0.c0)) WHERE ('-H') >= (t0.c1::TEXT) COLLATE \"C\";",
      "REINDEX TABLE CONCURRENTLY t0;",
      "ALTER TABLE t0 ALTER c1 TYPE TEXT; -- could not create unique index \"i0\" DETAIL:  Key ((1 / c0))=(0) is duplicated."
    ],
    "title": "REINDEX CONCURRENTLY causes ALTER TABLE to fail",
    "version": "13trunk",
    "category": "E10"
  },
  {
    "date": "24/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=dd1f67bf25",
      "fix": "https://www.sqlite.org/src/info/8d964e1c21d4cea6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = \"ascii\", prefix = 1);",
      "INSERT INTO vt0(c0) VALUES (x'd1');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected error: database disk image is malformed"
    ],
    "title": "FTS integrity-check malfunctions nondeterministically with tokenize=\"ascii\"",
    "category": "E10"
  },
  {
    "date": "13/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA4HOjtymxAbuGNh4-X_2R0Lw5n01tzvP8E5-i-2gQXYWA%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/d57d61533a2b5b27b60cc9024c54688390871bf6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHAR(2) COLLATE \"C\", c1 CHAR(2) COLLATE \"POSIX\");",
      "INSERT INTO t0 VALUES('', '');",
      "SELECT * FROM t0 WHERE t0.c1 NOT IN (t0.c0); -- unexpected: cache lookup failed for collation 0"
    ],
    "title": "Unexpected \"cache lookup failed for collation 0\" failure",
    "category": "E10"
  },
  {
    "date": "02/12/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA5TwqWTrvRoFOF1Vipf5WpfcbQYwtLGzNVXGwa6Ptor9w%40mail.gmail.com"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT COLLATE \"POSIX\");",
      "CREATE VIEW v0(c0) AS (SELECT (t0.c0 COLLATE \"C\")::INT FROM t0); -- FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)"
    ],
    "title": "FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)",
    "category": "E10"
  },
  {
    "date": "21/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=cd3311e323",
      "commit": "https://sqlite.org/src/info/70815e273f511481"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0, languageid=\"lid\");",
      "INSERT INTO vt0 VALUES (0), (1);",
      "BEGIN;",
      "UPDATE vt0 SET lid = 1;",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected: database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for update on languageid",
    "category": "E10"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=d62981b76d",
      "fix": "https://www.sqlite.org/src/info/a11b393dc2c882cf"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt1 USING fts5(c1, c2, prefix = 1, tokenize = \"porter ascii\");",
      "INSERT INTO vt1 VALUES (x'e4', '+\u452c+');",
      "INSERT INTO vt1(vt1) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for special characters in table",
    "category": "E10"
  },
  {
    "date": "24/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=df46a6f38e",
      "fix": "https://www.sqlite.org/src/info/1c0a05b09a97e6e2"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 71, tokenize = \"porter ascii\", prefix = 9);",
      "BEGIN;",
      "INSERT INTO vt0(c0) VALUES (x'e9');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- sqlite3.c:213028: sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed"
    ],
    "title": "Debug assertion sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed",
    "category": "E10"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99130" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 INT UNIQUE);",
      "INSERT INTO t0(c1) VALUES(1);",
      "SELECT * FROM t0 WHERE t0.c1 BETWEEN 0 AND (\"\\n2\"); -- expected: {NULL, 1}, actual: {}"
    ],
    "title": "BETWEEN malfunctions when comparing a string containing a newline",
    "version": "8.0.19",
    "category": "E10"
  },

  {
    "category": "E13",
    "date": "30/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-April/084324.html",
      "fix": "https://www.sqlite.org/src/info/5997d075665faca6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0, c1 REAL);",
      "CREATE UNIQUE INDEX index_1 ON test(c0 GLOB c1);",
      "INSERT INTO test(c0, c1) VALUES ('1', '1');",
      "INSERT INTO test(c0, c1) VALUES ('0', '1');",
      "REINDEX; -- Error: UNIQUE constraint failed"
    ],
    "title": "Unique index that uses GLOB does not detect duplicate due to REAL conversion"
  },
  {
    "date": "16/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0f0428096f",
      "fix": "https://www.sqlite.org/src/info/6fe0367f9a337b7c"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0 VALUES (-1);",
      "SELECT * FROM t0 WHERE t0.c0 GLOB '-*'; -- unexpected: row is not fetched"
    ],
    "title": "GLOB unexpectedly does not match",
    "category": "E13"
  },
  {
    "date": "2/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=a9efb42811",
      "fix": "https://sqlite.org/src/info/17e9f65814264de9"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0(0) WHERE c0 GLOB c0;",
      "INSERT INTO t0 VALUES (0);",
      "CREATE UNIQUE INDEX i1 ON t0(0);",
      "CREATE UNIQUE INDEX i2 ON t0(0);",
      "REPLACE INTO t0 VALUES(0);",
      "SELECT COUNT(*) FROM t0 WHERE t0.c0 GLOB t0.c0; -- expected: 1, actual: 2"
    ],
    "title": "Incorrect result for GLOB operator",
    "category": "E13"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=5ad2aa6921",
      "fix": "https://www.sqlite.org/src/info/89a9dad6330270a4"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE TABLE t0(c0 REAL, c1);",
      "INSERT INTO t0(c0) VALUES (''), (0);",
      "CREATE INDEX i0 ON t0(c1) WHERE c0 GLOB 3;",
      "UPDATE t0 SET c1=0; -- sqlite3.c:75871: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)' failed",
    "category": "E13"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=7929c1efb2",
      "fix": "https://sqlite.org/src/info/ef604882a275d3d5"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT 0 GROUP BY 1;",
      "SELECT * FROM v0, t0 LEFT JOIN vt0 ON vt0.c0 MATCH 1 WHERE v0.c0 == 0; -- sqlite3.c:143296: constructAutomaticIndex: Assertion `!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0' failed."
    ],
    "title": "Debug assertion constructAutomaticIndex: Assertion `!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0' failed",
    "category": "E13"
  },
  {
    "date": "30/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www3.sqlite.org/src/tktview?name=7c0e06b162",
      "fix": "https://www3.sqlite.org/src/info/ab09ef427181130b"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1);",
      "CREATE VIRTUAL TABLE vt1 USING fts5(c0);",
      "INSERT INTO vt1(c0) VALUES ('');",
      "SELECT * FROM vt1 NATURAL JOIN vt0 WHERE vt0.c1 MATCH 'a'; -- parse error in rank function:"
    ],
    "title": "NATURAL JOIN on virtual table results in \"parse error in rank function\"",
    "category": "E13"
  },

  {
    "category": "E14",
    "comment": "This issue was classified as \"severe\", was since 2013 in SQLite, and was a bug in the theorem prover.",
    "date": "4/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=5c6955204c",
      "email": "https://www.mail-archive.com/sqlite-users@mailinglists.sqlite.org/msg115136.html",
      "fix": "https://www.sqlite.org/src/info/c2e439bccc40825e211bf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX index_0 ON t0(c0) WHERE (~c0) NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched"
    ],
    "title": "Incorrect result on a table scan of a partial index"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities",
    "category": "E14"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=7e07a3dbf5",
      "fix": "https://www.sqlite.org/src/info/44578865fa7baf97"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t0 WHERE LIKELY(t0.rowid) <= '0'; -- unexpected: row is not fetched"
    ],
    "title": "LIKELY() seems to cause unexpected affinity conversion for rowid",
    "category": "E14"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=533010b8ca",
      "fix": "https://www.sqlite.org/src/info/71643deb"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t1 (c0);",
      "CREATE INDEX i0 ON t1((LIKELIHOOD(c0, 100) IN ())); -- unexpected: no error",
      "ALTER TABLE t1 RENAME COLUMN c0 TO c1; -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\"",
    "category": "E14"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/533010b8cacebe82533a8cd4e230fbb819565115",
      "fix": "https://www.sqlite.org/src/info/04bd5cb73287f926"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0(((LIKELIHOOD(1, 2)) AND ((1 IN ())))); -- unexpected: no error",
      "ALTER TABLE t0 RENAME TO t1; -- -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Another case of Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\"",
    "category": "E14"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities",
    "category": "E14"
  },
  {
    "comment": "The bug was fixed in 8.0.17, but not necessarily based on our bug report, since it was not referenced.",
    "date": "22/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95926" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES(1);",
      "SELECT * FROM t0 WHERE IF(FALSE, t0.c0, 0.1); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Row is not fetched when using a function expression that should yield TRUE",
    "category": "E14"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95938" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT IGNORE INTO t0(c0) VALUES(\"\\n123\");",
      "SELECT * FROM t0 WHERE COALESCE(t0.c0); -- expected: row is fetched, actual: no row is fetched",
      "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Function return value with newline yields wrong result when used as a boolean",
    "category": "E14"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95954" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 BIGINT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE CAST(COALESCE(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected",
      "SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected"
    ],
    "title": "CAST of negative function return value to UNSIGNED malfunctions with BIGINT",
    "category": "E14"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95964" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 INT) ENGINE = MEMORY;",
      "INSERT INTO t0(c0) VALUES(0);",
      "INSERT INTO t1(c0) VALUES(-1);",
      "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Compare that uses UNSIGNED cast and function malfunctions in the MEMORY engine",
    "category": "E14"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities",
    "category": "E14"
  },
  {
    "date": "10/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=d7c3f125c9",
      "fix": "https://www.sqlite.org/src/info/d47d66e3d360d8aa"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS (0 = UNLIKELY(c1)) UNIQUE, c1 TEXT);",
      "INSERT INTO t0(c1) VALUES (1), (0);",
      "REINDEX; -- UNIQUE constraint failed: t0.c0"
    ],
    "title": "REINDEX results in \"UNIQUE constraint failed\" for generated column",
    "category": "E14"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/d60b3cd7cb0bdff8ff39f76c9faf16ba2efa442f",
      "fix": "https://www.sqlite.org/docsrc/info/722f0828b3074e89"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT ((CAST(1 as INT)) COLLATE BINARY) == '1'; -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression has an affinity",
    "category": "E14"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=57353f8243",
      "fix": "https://www.sqlite.org/src/info/0f748fe58bbbb7ce"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT (1 IN (CAST('1' as TEXT) COLLATE NOCASE)); -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression in the right side of an IN operator results in an affinity conversion",
    "category": "E14"
  },
  {
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=4d01eda811",
      "fix": "https://www.sqlite.org/src/info/5c6146b56a75a94f"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "SELECT 0.5 IS TRUE COLLATE NOCASE; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE RTRIM; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE BINARY; -- expected: 1, actual: 0"
    ],
    "title": "IS TRUE operator malfunctions with COLLATE and REAL value",
    "category": "E14"
  },
  {
    "date": "16/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e1e07ef202",
      "fix": "https://www.sqlite.org/src/info/54110870487f7801"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c3 TEXT);",
      "INSERT INTO t0(c3) VALUES ('0');",
      "SELECT * FROM t0 WHERE (t0.c3 COLLATE NOCASE) BETWEEN 1 AND '5'; -- expected: no row is fetched, actual: row is fetched"
    ],
    "title": "COLLATE in BETWEEN expression is ignored",
    "category": "E14"
  },
  {
    "date": "09/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a7debbe0ad",
      "fix": "https://www.sqlite.org/src/info/b9ec72203c19c2b9"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES('');",
      "CREATE VIEW v2(c0, c1) AS SELECT 'B' COLLATE NOCASE, 'a' FROM t0 ORDER BY t0.c0;",
      "SELECT SUM(count) FROM (SELECT v2.c1 BETWEEN v2.c0 AND v2.c1 as count FROM v2); -- expected: 0, actual: 1"
    ],
    "title": "BETWEEN issue in view",
    "category": "E14"
  },
  {
    "date": "23/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=135c9da751",
      "fix": "https://www.sqlite.org/src/info/978b2d20cf95d0b7"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0(c0) VALUES('a');",
      "SELECT * FROM t0 WHERE (t0.c0, 0) < ('B' COLLATE NOCASE, 0); -- unexpected: row is not fetched"
    ],
    "title": "Comparison of row values with COLLATE NOCASE yields incorrect result",
    "category": "E14"
  },
  {
    "date": "02/12/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA5TwqWTrvRoFOF1Vipf5WpfcbQYwtLGzNVXGwa6Ptor9w%40mail.gmail.com"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT COLLATE \"POSIX\");",
      "CREATE VIEW v0(c0) AS (SELECT (t0.c0 COLLATE \"C\")::INT FROM t0); -- FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)"
    ],
    "title": "FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)",
    "category": "E14"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": { "fix": "https://www.sqlite.org/src/info/27c0fdab1ba4d499" },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA cache_size = 100000;",
      "PRAGMA foreign_keys = true;",
      "CREATE TEMP TABLE t0(c0, c1 INTEGER PRIMARY KEY AUTOINCREMENT CHECK (c0), c2 BLOB NOT NULL CHECK (LTRIM(1)) UNIQUE DEFAULT '0000000000000');",
      "COLLATE BINARY, c3 BLOB UNIQUE NOT NULL ON CONFLICT ABORT CHECK ((''IN (c0, NULL, c1))) GENERATED ALWAYS AS (1), FOREIGN KEY(c1) REFERENCES t0(c2) ON DELETE CASCADE);",
      "CREATE UNIQUE INDEX i0 ON t0(0, 0, 0);",
      "CREATE UNIQUE INDEX i1 ON t0(0, 0, 0);",
      "CREATE UNIQUE INDEX i2 ON t0(0, 0, c1);",
      "CREATE UNIQUE INDEX i3 ON t0(0, 0, c1);",
      "CREATE UNIQUE INDEX i4 ON t0(c0, 0, c2);",
      "CREATE INDEX i5 ON t0(0, CASE WHEN 1 THEN 1 WHEN c2 THEN c1 END, 0);",
      "VACUUM;",
      "INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0); -- segfault"
    ],
    "title": "Generated column and foreign key causes a segfault",
    "category": "E14"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=b0cb8aff56",
      "fix": "https://sqlite.org/src/info/56539e1c132632c0"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0((c0 NOTNULL) COLLATE BINARY);",
      "SELECT * FROM t0 WHERE(c0 NOTNULL) COLLATE BINARY BETWEEN 0 AND c0; -- sqlite3.c:98025: sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed."
    ],
    "title": "Debug assertion sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed",
    "category": "E14"
  },
  {
    "date": "05/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=fa146dcfe6",
      "fix": "https://www.sqlite.org/docsrc/info/e751b0c91a80dd31"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 1) COLLATE NOCASE as a UNION SELECT CHAR(0, 0) as a); -- 0000",
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 0) COLLATE NOCASE as a UNION SELECT CHAR(0, 1) as a); -- 0001"
    ],
    "title": "Unexpected result for MIN on string that contains a null character",
    "category": "E14"
  }
]
