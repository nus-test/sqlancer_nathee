[
  {
    "comment": "The failing test case caused the SQLite developers to realize \"a defect in the design of SQLite, not a defect in the implementation.\" Seven options to address this were outlined. Since it was not very clear how to best address this, the quirk was documented in the documentation and a compile time option to omit the relevant pragma was introduced.",
    "date": "28/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/info/a340eef47b0cad5",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-April/084322.html",
      "fix": "https://www.sqlite.org/src/info/eabe7f2d4ff0e0dd"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0);",
      "CREATE INDEX index_0 ON test(c0 LIKE '');",
      "PRAGMA case_sensitive_like=false;",
      "VACUUM;",
      "SELECT * from test; -- Error: malformed database schema (index_0) - non-deterministic functions prohibited in index expressions"
    ],
    "title": "PRAGMA case_sensitive_like can corrupt some databases"
  },
  {
    "date": "30/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-April/084324.html",
      "fix": "https://www.sqlite.org/src/info/5997d075665faca6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0, c1 REAL);",
      "CREATE UNIQUE INDEX index_1 ON test(c0 GLOB c1);",
      "INSERT INTO test(c0, c1) VALUES ('1', '1');",
      "INSERT INTO test(c0, c1) VALUES ('0', '1');",
      "REINDEX; -- Error: UNIQUE constraint failed"
    ],
    "title": "Unique index that uses GLOB does not detect duplicate due to REAL conversion"
  },
  {
    "comment": "As described in one of the commit messages for this fix, addressing this bug required a \"big change\" in the code.",
    "date": "3/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084366.html",
      "fix": "https://www.sqlite.org/src/info/5a8a23ee5f60a31d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0 REAL);",
      "CREATE UNIQUE INDEX index_0 ON test(LENGTH(-c0));",
      "INSERT INTO test(c0) VALUES (0.0), ('10:');",
      "REINDEX; -- UNIQUE constraint failed: index 'index_0'"
    ],
    "title": "Problem with REAL values and string functions used in indexes or on expressions"
  },
  {
    "date": "6/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084426.html",
      "fix": "https://sqlite.org/src/info/91f701d39852ef1ddb29"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 INTEGER, PRIMARY KEY (c0)) WITHOUT ROWID;",
      "ALTER TABLE t0 RENAME COLUMN c0 TO c1; -- no such column: c0"
    ],
    "title": "ALTER TABLE fails when renaming an INTEGER PRIMARY KEY column in a WITHOUT ROWID table"
  },
  {
    "comment": "The bug was classified as \"severe\" and existed in SQLite since 2013.",
    "date": "7/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=9cf6c9bb51",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084460.html",
      "fix": "https://www.sqlite.org/src/info/658b84d7"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0 INTEGER PRIMARY KEY);",
      "PRAGMA reverse_unordered_selects=true;",
      "INSERT INTO t1(c0) VALUES (0);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t1, t0 WHERE t1.c0 < t0.c0; -- no row is fetched"
    ],
    "title": "Incorrect result for \"<\" and \"<=\" comparison of rowid and non-numeric text value"
  },
  {
    "date": "9/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084480.html",
      "fix": "https://www.sqlite.org/src/info/ebe4845cd0ffb96b"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER PRIMARY KEY);",
      "INSERT INTO t0(c0) VALUES (1);",
      "PRAGMA reverse_unordered_selects=true;",
      "SELECT * FROM t0 WHERE ((t0.c0 > 'a') OR (t0.c0 <= 'a')); -- fetches no row",
      "SELECT ((t0.c0 > 'a') OR (t0.c0 <= 'a')) FROM t0; -- returns 1"
    ],
    "title": "Row is not fetched with PRAGMA reverse_unordered_selects=true"
  },
  {
    "date": "10/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084497.html",
      "fix": "https://www.sqlite.org/src/info/db9acef14d492121"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT 1e500 >= 1,  CAST(1e500 AS INT) >= CAST(1 AS INT), ROUND(1e500) >= ROUND(1); -- 1|1|0"
    ],
    "title": "Incorrect handling of Infinity by the ROUND function"
  },
  {
    "comment": "The bug highlights a conceptual issue in SQLite and cannot be fixed without breaking backward compatibility. The issue received its own name, namely the \"WITHOUT ROWID DESC PRIMARY KEY UNIQUE constraint index anomaly\". Nevertheless, as stated in the bug report, it is unlikely that real-world applications are affected.",
    "date": "13/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=bba7b69f98",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084528.html",
      "fix": "https://www.sqlite.org/src/info/f7aadfab3bb8eb8e"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 PRIMARY KEY DESC, c1 UNIQUE DEFAULT NULL) WITHOUT ROWID;",
      "INSERT INTO t0(c0) VALUES (1), (2), (3), (4), (5);",
      "REINDEX;",
      "SELECT * FROM t0 WHERE t0.c0 IN (SELECT c0 FROM t0) AND t0.c1 ISNULL; -- fetches only one row instead of all five rows"
    ],
    "title": "REINDEX causes rows not to be fetched in a WITHOUT ROWIDs table and PRIMARY KEY DESC"
  },
  {
    "comment": "This bug was introduced while fixing another bug that I had previously found.",
    "date": "14/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084539.html",
      "fix": "https://www.sqlite.org/src/info/bc7d2c1656396bb4"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA reverse_unordered_selects=true;",
      "CREATE TABLE t1 (c0, c1); CREATE TABLE t2 (c0 INT UNIQUE);",
      "INSERT INTO t1(c0, c1) VALUES (0, 0), (0, NULL);",
      "INSERT INTO t2(c0) VALUES (1);",
      "SELECT 1, NULL INTERSECT SELECT * FROM (SELECT t2.c0, t1.c1 FROM t1, t2 WHERE ((t2.rowid <= 'a')) OR (t1.c0 <= t2.c0) ORDER BY 'a' DESC LIMIT 100); -- no row is fetched"
    ],
    "title": "PRAGMA reverse_unordered_selects=true results in row not being fetched"
  },
  {
    "date": "16/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=3c27b97e31",
      "fix": "https://www.sqlite.org/src/info/14c00b1016ba53ab"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "CREATE TABLE t1 (c1 REAL);",
      "INSERT INTO t1(c1) VALUES (8366271098608253588);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t1 WHERE (t1.c1 = CAST(8366271098608253588 AS REAL)); -- fetches row",
      "SELECT * FROM t0, t1 WHERE (t1.c1 = CAST(8366271098608253588 AS REAL)); -- fetches no row",
      "SELECT * FROM t0, t1 WHERE (t1.c1 >= CAST(8366271098608253588 AS REAL) AND t1.c1 <= CAST(8366271098608253588 AS REAL)); -- fetches row"
    ],
    "title": "REAL rounding seems to depend on FROM clause"
  },
  {
    "date": "18/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/info/787fa716be3a7f650c",
      "fix": "https://sqlite.org/src/info/778b1224a318d013"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1, PRIMARY KEY (c0, c1));",
      "CREATE TABLE t1 (c0);",
      "INSERT INTO t1 VALUES (2);",
      "SELECT * FROM t0, t1 WHERE (t0.c1 >= 1 OR t0.c1 < 1) AND t0.c0 IN (1, t1.c0) ORDER BY 1; -- results in a segfault"
    ],
    "title": "Query results in a SEGFAULT"
  },
  {
    "comment": "This bug report resulted in a change of the accepted SQL dialect, disallowing strings in double quotes when creating indexes.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/9b78184be266fd7084e9e8038ad631a21b37eb9e",
      "fix1": "https://www.sqlite.org/src/info/1685610e",
      "fix2": "https://www.sqlite.org/src/info/3e1b55f3ab85710e"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1, c2);",
      "INSERT INTO t0(c1, c2) VALUES  ('a', 1);",
      "CREATE INDEX i0 ON t0(\"C3\");",
      "ALTER TABLE t0 RENAME COLUMN c1 TO c3;",
      "SELECT DISTINCT * FROM t0; -- fetches C3|1 rather than a|1"
    ],
    "title": "Index on non-existing column results in a fabricated value being fetched"
  },
  {
    "comment": "This bug uncovered that the compiler somtimes confuses x IS TRUE with x IS FALSE, and the other way around.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d3e7f2ba5b",
      "fix": "https://www.sqlite.org/src/info/99eba69b3a64741c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES ('val');",
      "SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE OR (t0.c0 IN (-1)))) IS 0); -- fetches no row"
    ],
    "title": "Nested boolean formula with IN operator computes an incorrect result"
  },
  {
    "date": "21/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/b5ca442af9fadf5eff5b2bf64839516ab82cfc3d",
      "fix": "https://www.sqlite.org/src/info/b8071d10cba8f6c1"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed",
    "test": [
      "CREATE TABLE IF NOT EXISTS t0(c0);",
      "INSERT INTO t0(c0) VALUES (-9223372036854775808);",
      "BEGIN TRANSACTION;",
      "CREATE INDEX i0 ON t0(ABS(c0)); -- integer overflow (expected)",
      "COMMIT; -- unexpected: the index is still created",
      "CREATE INDEX i0 ON t0(1); -- malformed database schema (i0) - index i0 already exists"
    ],
    "title": "\"Malformed database schema\" when creating a failing index within a transaction"
  },
  {
    "date": "25/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=4c2d7639f0",
      "fix": "https://www.sqlite.org/src/info/67a68af5578f08d2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT CAST('-' AS NUMERIC); -- unexpected: computes 0.0 rather than 0"
    ],
    "title": "CAST('-' AS NUMERIC) computes 0.0"
  },
  {
    "date": "25/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e8bedb2a18",
      "fix": "https://www.sqlite.org/src/info/67a68af5578f08d2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT '' - 2851427734582196970; -- actual: -2851427734582196736, expected: -2851427734582196970"
    ],
    "title": "Incorrect result when subtracting a large integer number from a TEXT value"
  },
  {
    "date": "08/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/dd6bffbfb6e61db9ecc9ea833d586427961ccc9d",
      "fix": "https://www.sqlite.org/src/info/c0c90961b4fa1c11"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 TEXT);",
      "INSERT INTO t0(c0) VALUES ('1.0');",
      "SELECT CAST(c0 AS NUMERIC) FROM t0; -- expected: 1, actual: 1.0"
    ],
    "title": "CAST to NUMERIC no longer converts to INTEGER"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/fd76310a5e843e074a30ed98b859dd0be11d0276",
      "fix": "https://sqlite.org/src/info/567b13093956185b"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0('1' IN ());",
      "ALTER TABLE t0 RENAME TO t1; -- error in index i0: no such column: 1"
    ],
    "title": "TEXT value interpreted as column name in an index with empty list in an IN expression"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=533010b8ca",
      "fix": "https://www.sqlite.org/src/info/71643deb"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t1 (c0);",
      "CREATE INDEX i0 ON t1((LIKELIHOOD(c0, 100) IN ())); -- unexpected: no error",
      "ALTER TABLE t1 RENAME COLUMN c0 TO c1; -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\""
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=412bba9b22",
      "fix": "https://www.sqlite.org/src/info/57050162294efec9"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": ["SELECT -'.'; -- expected: 0, actual: 0.0"],
    "title": "CAST('.' AS NUMERIC) computes 0.0 rather than 0"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/d60b3cd7cb0bdff8ff39f76c9faf16ba2efa442f",
      "fix": "https://www.sqlite.org/docsrc/info/722f0828b3074e89"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT ((CAST(1 as INT)) COLLATE BINARY) == '1'; -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression has an affinity"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/533010b8cacebe82533a8cd4e230fbb819565115",
      "fix": "https://www.sqlite.org/src/info/04bd5cb73287f926"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0(((LIKELIHOOD(1, 2)) AND ((1 IN ())))); -- unexpected: no error",
      "ALTER TABLE t0 RENAME TO t1; -- -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Another case of Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\""
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=1819598c09",
      "fix": "https://www.sqlite.org/docsrc/info/e0f700bb6c8142c5"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed (in documentation)",
    "test": ["SELECT -'1.0'; -- expected: -1, actual: -1.0"],
    "title": "-'1.0' computes -1.0 rather than -1"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=57353f8243",
      "fix": "https://www.sqlite.org/src/info/0f748fe58bbbb7ce"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT (1 IN (CAST('1' as TEXT) COLLATE NOCASE)); -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression in the right side of an IN operator results in an affinity conversion"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=afdc5a29dc",
      "fix": "https://www.sqlite.org/docsrc/info/7a51b32537ac7e95"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT CAST('8.2250617031974513E18' AS NUMERIC); -- expected: 8225061703197451300, unexpected: 8.22506170319745e+18"
    ],
    "title": "Lossless conversion when casting a large TEXT number to NUMERIC is not performed"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities"
  },
  {
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=4d01eda811",
      "fix": "https://www.sqlite.org/src/info/5c6146b56a75a94f"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "SELECT 0.5 IS TRUE COLLATE NOCASE; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE RTRIM; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE BINARY; -- expected: 1, actual: 0"
    ],
    "title": "IS TRUE operator malfunctions with COLLATE and REAL value"
  },
  {
    "comment": "Opening this bug report also (indirectly) caused a discussion on the mailing list on how -0.0 should be printed by SQLite, with over 50 replies (see http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-June/084857.html).",
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/674385aeba91c774d47736f1aefd259b074dc5d3",
      "fix": "https://www.sqlite.org/src/info/491f0f9bbddb6302"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": ["SELECT CAST('-0.0' AS NUMERIC); -- expected: 0, unexpected: 0.0"],
    "title": "CAST('-0.0' AS NUMERIC) computes 0.0 rather than 0"
  },
  {
    "date": "16/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e1e07ef202",
      "fix": "https://www.sqlite.org/src/info/54110870487f7801"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c3 TEXT);",
      "INSERT INTO t0(c3) VALUES ('0');",
      "SELECT * FROM t0 WHERE (t0.c3 COLLATE NOCASE) BETWEEN 1 AND '5'; -- expected: no row is fetched, actual: row is fetched"
    ],
    "title": "COLLATE in BETWEEN expression is ignored"
  },
  {
    "date": "20/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95889" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(4294967294);",
      "CREATE INDEX i0 ON t0((ABS(t0.c0))); -- unexpected: ERROR 3752 (22003): Value is out of range for functional index 'i0'"
    ],
    "title": "Functional index seems to malfunction with UNSIGNED column"
  },
  {
    "date": "20/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95894" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT PRIMARY KEY UNIQUE);",
      "ALTER TABLE t0 DROP PRIMARY KEY;",
      "select COLUMN_KEY, COLUMN_NAME from information_schema.columns where table_schema = 'a' and TABLE_NAME = 't0'; -- unexpected: c0 is still shown as PRI",
      "ALTER TABLE t0 DROP PRIMARY KEY; -- ERROR 1091 (42000): Can't DROP 'PRIMARY'; check that column/key exists"
    ],
    "title": "DROP PRIMARY KEY on UNIQUE PRIMARY KEY does not update information_schema.column"
  },
  {
    "date": "21/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95908" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TINYINT);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE NOT(t0.c0 <=> 2035382037); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "The negation of a \"<=>\" comparison malfunctions depending on the column's type"
  },
  {
    "comment": "The bug was fixed in 8.0.17, but not necessarily based on our bug report, since it was not referenced.",
    "date": "22/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95926" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES(1);",
      "SELECT * FROM t0 WHERE IF(FALSE, t0.c0, 0.1); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Row is not fetched when using a function expression that should yield TRUE"
  },
  {
    "date": "22/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95927" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": ["SELECT FALSE XOR '0.5'; -- expected: 1, actual: 0"],
    "title": "XOR operator returns incorrect result for strings with a floating-point number"
  },
  {
    "date": "22/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.20",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95929" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT) ENGINE = MyISAM;",
      "select * from information_schema.TABLES; -- unexpected (when executed with multiple threads): Duplicate entry 'triggerbug21-t0' for key 'PRIMARY'"
    ],
    "title": "Duplicate entry for key 'PRIMARY' when querying information_schema.TABLES"
  },
  {
    "comment": "This bug report revealed a security vulnerability that was fixed in a Critical Patch Update (CVSSv3.0 Base Score: 4.9)",
    "cve": "CVE-2019-2879",
    "date": "23/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "DROP DATABASE IF EXISTS test;",
      "CREATE DATABASE test;",
      "USE test;",
      "CREATE TABLE t0(c0 INT);",
      "CREATE INDEX i0 ON t0((t0.c0 || 1));",
      "INSERT INTO t0(c0) VALUES(1);",
      "CHECK TABLE t0 FOR UPGRADE; -- results in a segfault when executed with multiple threads"
    ],
    "title": "CHECK TABLE FOR UPGRADE crashes server (segfault)"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95937" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT BENCHMARK(NULL, 1); -- expected: 0, actual: NULL",
      "SELECT BENCHMARK(-1, 1); -- expected: 0, actual: NULL"
    ],
    "title": "BENCHMARK() returns NULL in some cases but is documented to always return 0"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95942" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(0.9);",
      "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "TEXT column used as boolean incorrectly evaluates to false"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95954" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 BIGINT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE CAST(COALESCE(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected",
      "SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected"
    ],
    "title": "CAST of negative function return value to UNSIGNED malfunctions with BIGINT"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95957" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES(-1);",
      "SELECT t0.c0 IN (1, CAST(t0.c0 AS UNSIGNED)) from t0; -- expected: 0, actual: 1"
    ],
    "title": "IN operator issue when comparing signed column and the column cast to unsigned"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95958" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(\"0.5\");",
      "SELECT * FROM t0 WHERE t0.c0 AND 1; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 OR 0; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 XOR 0;  -- expected: 0.5, actual: no row is fetched"
    ],
    "title": "AND/OR/XOR compute wrong result for small floating-point numbers in TEXT columns"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95960" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT '\\n1' & 1; -- expected: 1, actual: 0",
      "SELECT '\\n1' | 0; -- expected: 1, actual: 0",
      "SELECT '\\n1' ^ 1; -- expected: 0, actual: 1"
    ],
    "title": "The logical operators &, |, and ^ do not ignore newlines in TEXT"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95964" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 INT) ENGINE = MEMORY;",
      "INSERT INTO t0(c0) VALUES(0);",
      "INSERT INTO t1(c0) VALUES(-1);",
      "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Compare that uses UNSIGNED cast and function malfunctions in the MEMORY engine"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95969" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SET SESSION sort_buffer_size = 18446744073709551615;",
      "CREATE TABLE t0(c0 INT UNIQUE, c1 INT UNIQUE);",
      "INSERT INTO t0(c0) VALUES(1), (2), (3);",
      "SELECT * FROM t0 WHERE NOT((t0.c1 IS NULL) AND ((t0.c0) != (1))); -- unexpected: ERROR 5 (HY000): Out of memory (Needed 24 bytes)"
    ],
    "title": "Setting sort_buffer_size to a large value causes query to go out of memory"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95975" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": ["SELECT \"a\" IN (0); -- expected: 0, actual: 1"],
    "title": "Unexpected result for IN operator and constants"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95983" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES(-1, \"a\");",
      "SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1; -- expected: fetches row, actual: does not fetch the row"
    ],
    "title": "Query involving &, <, and AND operators computes incorrect result"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95985" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "SET GLOBAL rbr_exec_mode = STRICT; -- unexpected: ERROR 1228 (HY000): Variable 'rbr_exec_mode' is a SESSION variable and can't be used with SET GLOBAL"
    ],
    "title": "SET GLOBAL on rbr_exec_mode fails"
  },
  {
    "date": "26/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95987" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "SET GLOBAL key_cache_division_limit = 100; -- unexpected: fails nondeterministically with ERROR 1210 (HY000): Incorrect arguments to SET"
    ],
    "title": "SET key_cache_* and key_buffer_* variables fails nondeterministically"
  },
  {
    "date": "26/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "email": "https://bugs.mysql.com/bug.php?id=96012" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES (\"a\");",
      "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Query with GREATEST function malfunctions"
  },
  {
    "comment": "This bug was reproduced to occur in \"v11 and quite a large number of branches before that\". The bug was fixed \"somewhat accidentally\" for v12, but backporting the relevant patch was declared to be too invasive.",
    "date": "02/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA4CV21mUfwjQj3va7MWvqB2EAdJT31%3Duf_yArBRVzQjYw%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 boolean UNIQUE);",
      "CREATE INDEX i0 ON t0((nullif(FALSE, TRUE)));",
      "INSERT INTO t0(c0) VALUES(TRUE);",
      "SELECT * FROM t0 WHERE nullif(FALSE, TRUE) OR t0.c0; -- expected: row is fetched, actual: ERROR:  index key does not match expected index column"
    ],
    "title": "SELECT results in \"ERROR: index key does not match expected index column\""
  },
  {
    "comment": "A fix for this seemed to be non-trivial and it was put on the \"back burner until we have some consensus how to proceed on that\".",
    "date": "4/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA4hkFSV_Y%3DsW_vNcYgKFEoq0WL5GtrBWEHUZnCqSqjhAA%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE UNIQUE INDEX i0 ON t0(c0);",
      "ALTER TABLE t0 ADD PRIMARY KEY USING INDEX i0, ALTER c0 TYPE BIGINT;",
      "-- unexpected: ERROR: could not open relation with OID 43707388"
    ],
    "title": "ALTER TABLE results in \"ERROR: could not open relation with OID 43707388\""
  },
  {
    "comment": "Tom Lane commented this find with \"nifty\". :-)",
    "date": "10/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA7W4NWEhCvftdV6_8bbm2vgypi5nuxfnSEJQqVKFSUoMg%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/d3751adcf14d3baacc9738ee9ce869dc1c31d7ad"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "-- requires another open transaction holding a snapshot",
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES('b'), ('a');",
      "ANALYZE;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "UPDATE t0 SET c0 = 'a';",
      "CREATE INDEX i0 ON t0(c0);",
      "SELECT * FROM t0 WHERE 'baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' > t0.c0; -- unexpected: ERROR: found unexpected null value in index \"i0\""
    ],
    "title": "ERROR: found unexpected null value in index"
  },
  {
    "comment": "Later on this day, another bug report was opened on this: https://www.postgresql.org/message-id/flat/20190711150822.z7cirna2fjtrfcnu%40development#d05c216fb9f3d27e3b69520666b043c6. Although we reported the bug first, the second bug reporter, rather than us, was credited. Although we asked for a clarification on the mailing list (see https://www.postgresql.org/message-id/CA%2Bu7OA6RsonbT1S06TaO99QDL2H8zS-N2jO%3DwSuqAOJLX5yQSg%40mail.gmail.com), we did not receive any response.",
    "date": "10/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA7fmtm3kR%2BY6Mgr9djU3WeOsMzQLWtNPMvoEVSm%3Dr9XaQ%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 BOOLEAN, c1 BOOLEAN, UNIQUE(c1));",
      "CREATE STATISTICS s1 ON c0, c1 FROM t0;",
      "INSERT INTO t0(c0) VALUES(TRUE);",
      "ANALYZE t0;",
      "SELECT * FROM t0 WHERE (t0.c0 AND t0.c1) >= TRUE; -- ERROR:  negative bitmapset member not allowed"
    ],
    "title": "ERROR: negative bitmapset member not allowed in SELECT",
    "version": "12beta2"
  },
  {
    "date": "30/07/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ced41c7c7d",
      "fix": "https://www.sqlite.org/src/info/a871d69c6de65038"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t1 (c1 , c2, c3, c4 , PRIMARY KEY (c4, c3));",
      "INSERT INTO t1(c3) VALUES (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (NULL), (1), (0);",
      "UPDATE t1 SET c2 = 0;",
      "INSERT INTO t1(c1) VALUES (0), (0), (NULL), (0), (0);",
      "ANALYZE t1;",
      "UPDATE t1 SET c3 = 1;",
      "SELECT DISTINCT * FROM t1 WHERE t1.c3 = 1; -- expected: |0|1|, 0||1|, ||1|, actual: |0|1|"
    ],
    "title": "Query with DISTINCT does not fetch all distinct rows"
  },
  {
    "date": "02/07/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=41866dc373",
      "fix": "https://www.sqlite.org/src/info/faaaae4940b5f4f7"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE, c1);",
      "INSERT INTO t0(c0, c1) VALUES (NULL, 1);",
      "SELECT MIN(t0.c0), t0.c1 FROM t0; -- expected: NULL | 1, actual: NULL | NULL"
    ],
    "title": "MIN() malfunctions for UNIQUE column"
  },
  {
    "comment": "This bug was fixed 11 years after it was introduced.",
    "date": "03/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=71e183cab6",
      "fix": "https://www.sqlite.org/src/info/d465c3ee"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1);",
      "CREATE INDEX i0 ON t0(c1, c1 + 1 DESC);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT MIN(t0.c1), t0.c0 FROM t0 WHERE t0.c1 ISNULL; -- expected: NULL | 1, actual: NULL | NULL"
    ],
    "title": "MIN() malfunctions for a query with ISNULL condition"
  },
  {
    "date": "05/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d52a29a9e6",
      "fix": "https://www.sqlite.org/src/info/9c8c1092a8ce80e1"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1 TEXT);",
      "CREATE VIEW v0(c0) AS SELECT SUM(t0.c1) FROM t0;",
      "INSERT INTO t0(c0, c1) VALUES ('a', 1);",
      "SELECT * FROM v0, t0 WHERE t0.c1 <= v0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Unexpected affinity conversion in view"
  },
  {
    "date": "05/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=61c853857f",
      "fix1": "https://www.sqlite.org/src/info/09cd0c0c6e6c963e",
      "fix2": "https://www.sqlite.org/src/info/470ac8d50ce2f7cc",
      "fix3": "https://www.sqlite.org/src/info/e15a0977ddfad3d0"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, c1);",
      "INSERT INTO t0(c0, c1) VALUES (-1, 0);",
      "CREATE VIEW v0(c0, c1) AS SELECT t0.c0, AVG(t0.c1) FROM t0;",
      "SELECT * FROM v0 WHERE v0.c1 < v0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Row is not fetched in SELECT from VIEW"
  },
  {
    "date": "06/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0a5e2c1dcb",
      "fix": "https://www.sqlite.org/src/info/17b3d2218c02a400"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t0;",
      "INSERT INTO t0(c0) VALUES ('0');",
      "SELECT 0 IN (c0) FROM v0; -- expected: 0, actual: 1"
    ],
    "title": "Unexpected affinity conversion for view column in IN operator"
  },
  {
    "date": "07/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f8a7060ece",
      "fix": "https://www.sqlite.org/src/info/94085fb3"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE, c1);",
      "INSERT INTO t0(c1) VALUES (0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE VIEW v0(c0, c1) AS SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS INT) = 1;",
      "SELECT v0.c0, MIN(v0.c1) FROM v0; -- expected: 0|, actual: |"
    ],
    "title": "Incorrect result for query that uses MIN() and a CAST on rowid"
  },
  {
    "date": "15/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=256741a16b",
      "fix": "https://www.sqlite.org/src/info/4f5b2d938194fab7"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE EXISTS (SELECT MIN(c0)  OVER (), CUME_DIST() OVER () FROM t0) BETWEEN 1 AND 1;"
    ],
    "title": "Null pointer dereference caused by window functions in result-set of EXISTS(SELECT ...)"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=6710d2f7a1",
      "fix": "https://www.sqlite.org/src/info/500c9152daaf11cf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT TYPEOF(1) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0), (1);",
      "SELECT * FROM t0 LEFT JOIN v0 ON t0.c0 WHERE NOT(v0.c0 = 'a'); -- unexpected: fetches no row"
    ],
    "title": "LEFT JOIN fails to fetch row"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c7a1171907",
      "fix": "https://www.sqlite.org/src/info/43e8b143"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT LOWER(CAST('1e500' AS TEXT)) FROM t0;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT v0.c0 FROM v0, t0 WHERE t0.rowid NOT IN (0, 0, v0.c0); -- expected: '1e500', actual: Inf"
    ],
    "title": "WHERE clause erroneously influences value of fetched column from view"
  },
  {
    "date": "21/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b86894020e",
      "fix": "https://www.sqlite.org/src/info/d02490a2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 NOT NULL DEFAULT 1, c2, PRIMARY KEY (c0, c1));",
      "INSERT INTO t0(c2) VALUES (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL);",
      "INSERT INTO t0(c2) VALUES ('a');",
      "ANALYZE t0;",
      "SELECT DISTINCT * FROM t0 WHERE NULL IS t0.c0; -- unexpected: |1|a is not part of the result set"
    ],
    "title": "DISTINCT malfunctions for IS NULL"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d9f584e936",
      "fix": "https://www.sqlite.org/src/info/81b9f0f55042777b"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER PRIMARY KEY, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES (1, 'a');",
      "SELECT * FROM t0 WHERE '-1' BETWEEN 0 AND t0.c0; -- expected: 1|a, actual: no row is fetched"
    ],
    "title": "Row is not fetched in table with INTEGER PRIMARY KEY"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ac184eb571",
      "fix": "https://www.sqlite.org/src/info/e62eddbb048cbc2c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT UNIQUE, c1);",
      "INSERT INTO t0(c0) VALUES (-1);",
      "SELECT * FROM t0 WHERE - x'ce' >= t0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Row with comparison on TEXT UNIQUE column is not fetched"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=7e07a3dbf5",
      "fix": "https://www.sqlite.org/src/info/44578865fa7baf97"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t0 WHERE LIKELY(t0.rowid) <= '0'; -- unexpected: row is not fetched"
    ],
    "title": "LIKELY() seems to cause unexpected affinity conversion for rowid"
  },
  {
    "date": "27/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=dbaf8a6820",
      "fix": "https://www.sqlite.org/src/info/7f5168a76a400fc2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT * FROM t0 WHERE '1' IN (t0.c0); -- unexpected: fetches row"
    ],
    "title": "Unexpected affinity conversion is performed for the IN operator"
  },
  {
    "date": "02/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=57af00b664",
      "fix": "https://www.sqlite.org/src/info/0658c16e311393c8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL, c1 TEXT);",
      "CREATE INDEX i0 ON t0(+c0, c0);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT CAST(+ t0.c0 AS BLOB) LIKE 0 FROM t0; -- expected: 0, actual: 1"
    ],
    "title": "Expression computed on row yields incorrect result"
  },
  {
    "date": "02/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=2841e99d10",
      "fix": "https://www.sqlite.org/src/info/88833a9c2849c959"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL UNIQUE);",
      "INSERT INTO t0(c0) VALUES(2.07093491255203046E18);",
      "SELECT * FROM t0 WHERE c0 IN ('2070934912552030444'); -- unexpected: row is fetched"
    ],
    "title": "Different rounding when converting TEXT to REAL"
  },
  {
    "date": "09/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a7debbe0ad",
      "fix": "https://www.sqlite.org/src/info/b9ec72203c19c2b9"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES('');",
      "CREATE VIEW v2(c0, c1) AS SELECT 'B' COLLATE NOCASE, 'a' FROM t0 ORDER BY t0.c0;",
      "SELECT SUM(count) FROM (SELECT v2.c1 BETWEEN v2.c0 AND v2.c1 as count FROM v2); -- expected: 0, actual: 1"
    ],
    "title": "BETWEEN issue in view"
  },
  {
    "date": "16/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0f0428096f",
      "fix": "https://www.sqlite.org/src/info/6fe0367f9a337b7c"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0 VALUES (-1);",
      "SELECT * FROM t0 WHERE t0.c0 GLOB '-*'; -- unexpected: row is not fetched"
    ],
    "title": "GLOB unexpectedly does not match"
  },
  {
    "date": "17/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=587791f926",
      "fix": "https://www.sqlite.org/src/info/3fb40f518086c1e8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 PRIMARY KEY, c1);",
      "INSERT INTO t0(c0) VALUES (x'bb'), (0);",
      "SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- 1",
      "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched"
    ],
    "title": "Row is not fetched when using WHERE clause with INSTR()"
  },
  {
    "date": "07/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b2d4edaffd",
      "fix": "https://www.sqlite.org/src/info/3cde82c86b963fa7"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE VIEW v0(c0) AS SELECT t0.rowid FROM t0 ORDER BY 1;",
      "SELECT COUNT(*) FROM v0 WHERE ABS('1') = v0.c0; -- expected: 1, actual: 0"
    ],
    "title": "Comparison on view malfunctions"
  },
  {
    "date": "09/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a976c487d1",
      "fix": "https://www.sqlite.org/src/info/eb7ed90b8a65748f"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1);",
      "CREATE TABLE t1(c0);",
      "CREATE VIEW v0 AS SELECT c1 FROM t1 LEFT JOIN t0;",
      "INSERT INTO t1 VALUES (1);",
      "SELECT * FROM v0 WHERE NOT(v0.c1 IS FALSE); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "LEFT JOIN in view malfunctions"
  },
  {
    "date": "10/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c31034044b",
      "fix": "https://www.sqlite.org/src/info/7833feecfe745e23"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c1);",
      "INSERT INTO t0(c0) VALUES(0);",
      "CREATE VIEW v0(c0) AS SELECT t1.c1 FROM t0 LEFT JOIN t1;",
      "SELECT * FROM v0 WHERE v0.c0 NOTNULL NOTNULL; -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "LEFT JOIN in view malfunctions with NOTNULL"
  },
  {
    "date": "22/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=6ef984af89",
      "fix": "https://www.sqlite.org/src/info/5c118617cf08e17a"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT PRIMARY KEY);",
      "INSERT INTO t0(c0) VALUES ('');",
      "SELECT * FROM t0 WHERE (t0.c0, TRUE) > (CAST('' AS REAL), FALSE); -- unexpected: row is not fetched"
    ],
    "title": "Row value comparison yields incorrect result"
  },
  {
    "date": "23/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=135c9da751",
      "fix": "https://www.sqlite.org/src/info/978b2d20cf95d0b7"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0(c0) VALUES('a');",
      "SELECT * FROM t0 WHERE (t0.c0, 0) < ('B' COLLATE NOCASE, 0); -- unexpected: row is not fetched"
    ],
    "title": "Comparison of row values with COLLATE NOCASE yields incorrect result"
  },
  {
    "date": "25/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c1e19e1204",
      "fix": "https://www.sqlite.org/src/info/fbac0c65d8464b12"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "PRAGMA temp.recursive_triggers = true;",
      "CREATE TABLE t0(c0, c1 UNIQUE);",
      "CREATE TRIGGER c BEFORE DELETE ON t0;",
      "BEGIN INSERT INTO t0(c1) VALUES(1);",
      "END;",
      "INSERT INTO t0(c1) VALUES(0);",
      "REPLACE INTO t0(c1) VALUES (0);",
      "SELECT t0.c1 BETWEEN 0 AND (CASE WHEN 1 THEN 1 ELSE t0.c0 END NOT NULL) FROM t0; -- expected: 1 and 1, actual: 1"
    ],
    "title": "Trigger causes query to compute incorrect result"
  },
  {
    "date": "26/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=3ea1755124",
      "fix": "https://www.sqlite.org/src/info/5b4c0f2ddc6f324e"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1 TEXT GENERATED ALWAYS AS (1) UNIQUE);",
      "INSERT INTO t0(c0) VALUES (1);",
      "REINDEX;",
      "INSERT INTO t0(c0) VALUES (0);",
      "REINDEX; -- unexpected: UNIQUE constraint failed"
    ],
    "title": "REINDEX causes \"UNIQUE constraint failed\" error for generated column"
  },
  {
    "date": "27/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=91e8695101",
      "fix": "https://www.sqlite.org/src/info/6d1bbba9a004a249"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER PRIMARY KEY GENERATED ALWAYS AS(1), c1 UNIQUE GENERATED ALWAYS AS(1), c2 UNIQUE);",
      "INSERT INTO t0 VALUES(NULL); -- Segmentation fault"
    ],
    "title": "Segfault in table with generated columns"
  },
  {
    "date": "29/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=166347c6fc",
      "fix": "https://sqlite.org/src/info/4fba090e678ef184"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(1));",
      "CREATE INDEX i0 ON t0(0 DESC);",
      "PRAGMA legacy_file_format = true;",
      "VACUUM; -- table vacuum_db.t0 has 0 columns but 1 values were supplied"
    ],
    "title": "VACUUM issue on table with generated column"
  },
  {
    "comment": "This bug report made the SQLite developers remove the PRAGMA legacy_file_format option.",
    "date": "29/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=6484e6ce67",
      "fix": "https://sqlite.org/src/info/4d424f3047b48fc4"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(1), c1);",
      "PRAGMA legacy_file_format = true;",
      "CREATE INDEX i0 ON t0(0 DESC);",
      "VACUUM; -- table vacuum_db.t0 has 1 columns but 2 values were supplied"
    ],
    "title": "VACUUM on table with generated column results in an error"
  },
  {
    "date": "31/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=1d2a8efc6c",
      "fix": "https://sqlite.org/src/info/329820673a12ff6a"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(TYPEOF(c1)), c1);",
      "INSERT INTO t0(c1) VALUES(0);",
      "VACUUM; -- table vacuum_db.t0 has 1 columns but 2 values were supplied"
    ],
    "title": "VACUUM on table with generated column that uses TYPEOF results in an error"
  },
  {
    "date": "3/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=3c9eadd2a6",
      "fix": "https://www.sqlite.org/src/info/c5f96a085db9688a"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHECK(ABS(-9223372036854775808)));",
      "PRAGMA integrity_check; -- unexpected: integer overflow"
    ],
    "title": "PRAGMA integrity_check fails due to CHECK constraint even without records"
  },
  {
    "date": "4/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=02aa2bd02f",
      "fix": "https://sqlite.org/src/info/ea20068e6d97c934"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t1 LEFT JOIN t0;",
      "INSERT INTO t1(c0) VALUES (0);",
      "SELECT * FROM v0 WHERE (v0.c0, x'') != (NULL, 0); -- unexpected: row is not fetched"
    ],
    "title": "Row value comparison malfunctions on view with left join"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=2399f59861",
      "fix": "https://sqlite.org/src/info/77b1c90add514050"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL AS(c1), c1);",
      "REPLACE INTO t0(c1) VALUES(NULL); -- Segmentation fault"
    ],
    "title": "REPLACE on table with generated NOT NULL column results in segfault"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=ce22a07731",
      "fix": "https://sqlite.org/src/info/36c11ad51fe9ab1b"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);",
      "INSERT INTO t0(c1) VALUES (1);",
      "SELECT * FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1; -- unexpected: row is fetched"
    ],
    "title": "NULL WHERE condition unexpectedly results in row being fetched"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=4fc08501f4",
      "fix": "https://www.sqlite.org/src/info/9e07b48934e9a972"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS ((c4, 9, c4) < ('a', c1, 1)), c1 AS (1) NOT NULL, c2, c3 CHECK  ((x'56', 0) = (c1, 0)), c4 NOT NULL);",
      "PRAGMA integrity_check;",
      "INSERT INTO t0 VALUES (0, 0, 0), (0, 0, 0); -- unexpected: Segmentation fault"
    ],
    "title": "Segfault when inserting into table with generated columns"
  },
  {
    "date": "7/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=299b50ba81",
      "fix": "https://www.sqlite.org/src/info/104a2beb57037f93"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1 AS(c0 + c2), c2 AS(c1) CHECK(c2));",
      "UPDATE t0 SET c0 = NULL; -- Segmentation fault"
    ],
    "title": "UPDATE on table with two generated columns and CHECK clause results in segfault"
  },
  {
    "date": "19/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA7H5rcE2%3D8f263w4NZD6ipO_XOrYB816nuLXbmSTH9pQQ%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/c676e659b246f94d571b57b559f80cb2dc03e73b"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 boolean, c1 boolean, c2 boolean);",
      "INSERT INTO t0 VALUES(FALSE, FALSE, FALSE);",
      "CREATE STATISTICS s0 ON c0, c2 FROM t0;",
      "ANALYZE;",
      "SELECT * FROM t0 WHERE t0.c2 OR t0.c1 OR t0.c0; -- TRAP: FailedAssertion(\"clauses != NIL\", File: \"mcv.c\", Line: 1551)"
    ],
    "title": "Failed assertion clauses != NIL"
  },
  {
    "date": "19/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA7nnGYy8rY0vdTe811NuA%2BFrr9nbcBO9u2Z%2BJxqNaud%2Bg%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/b3c265d7be42484bd0ab4a9c0a920289e8f5c995",
      "improvement 1": "https://github.com/postgres/postgres/commit/2ddedcafca116c99e08c777ab2ab3a4de6f00c7e",
      "improvement 2": "https://github.com/postgres/postgres/commit/9ff5b699ed3e2d922ff6f5660e53b51bb5db983c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "CREATE INDEX i0 ON t0(c0 bpchar_ops);",
      "SELECT * FROM t0 WHERE t0.c0 LIKE ''; -- ERROR:  no = operator for opfamily 426"
    ],
    "title": "No = operator for opfamily 426"
  },
  {
    "date": "20/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "fix": "https://github.com/postgres/postgres/commit/4a0aab14dcb35550b55e623a3c194442c5666084"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 int);",
      "CREATE VIEW v0 AS SELECT * FROM t0;",
      "CREATE OR REPLACE VIEW v0 AS SELECT * FROM v0;",
      "SELECT * FROM information_schema.tables; -- server process (PID 2461) was terminated by signal 11: Segmentation fault"
    ],
    "title": "Fetching from information_schema.tables results in segfault"
  },
  {
    "date": "08/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b92e5e8ec2",
      "fix": "https://www.sqlite.org/src/info/9d75e1ccc72e9f53"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS (1), c1);",
      "CREATE TABLE t1(c0);",
      "SELECT * FROM t0, t1 WHERE t0.c0 == 0; -- out of memory"
    ],
    "title": "Query on table without rows and generated column results in \"out of memory\" error"
  },
  {
    "date": "09/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=bd8c280671",
      "fix": "https://www.sqlite.org/src/info/f3b39c71b88cb672"
    },
    "oracle": "hang",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 NOT NULL GENERATED ALWAYS AS (c0 = 0));",
      "INSERT INTO t0(c0) VALUES (0);",
      "PRAGMA integrity_check; -- hangs"
    ],
    "title": "PRAGMA integrity_check does not terminate on table with generated column"
  },
  {
    "date": "10/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=d7c3f125c9",
      "fix": "https://www.sqlite.org/src/info/d47d66e3d360d8aa"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS (0 = UNLIKELY(c1)) UNIQUE, c1 TEXT);",
      "INSERT INTO t0(c1) VALUES (1), (0);",
      "REINDEX; -- UNIQUE constraint failed: t0.c0"
    ],
    "title": "REINDEX results in \"UNIQUE constraint failed\" for generated column"
  },
  {
    "date": "16/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=3b84b42943",
      "fix": "https://www.sqlite.org/src/info/0271491438ad2a98"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0, c1 AS(1));",
      "INSERT INTO t0 VALUES(0);",
      "SELECT t1.c1 IS TRUE FROM t0 LEFT JOIN t1; -- expected: 0, actual: 1"
    ],
    "title": "LEFT JOIN malfunctions with generated column"
  },
  {
    "date": "20/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=e0a8120553",
      "fix": "https://sqlite.org/src/info/728ad39e3bd07a25"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL AS(1) UNIQUE, c1 INT);",
      "INSERT INTO t0 VALUES('');",
      "SELECT * FROM t0 WHERE (1 BETWEEN CAST(t0.c0 AS TEXT) AND t0.c0); -- unexpected: row is fetched"
    ],
    "title": "Incorrect result for BETWEEN and generated column"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=f00d096cae",
      "fix": "https://sqlite.org/src/info/8c856404b4e98d29"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0 VALUES(0);",
      "SELECT * FROM t0 WHERE (0, t0.c0) IN(SELECT DENSE_RANK() OVER(), LAG(0) OVER() FROM t0); -- sqlite3.c:87244: sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=d9ed4ebef1",
      "fix": "https://www.sqlite.org/src/info/0b1dbd60f5db3abe"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "SELECT * FROM t0 WHERE(c0, 0) IN(SELECT FIRST_VALUE(0) OVER(), 0); -- Segmentation fault"
    ],
    "title": "SELECT on window function causes a segfault"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=1b06916e01",
      "fix": "https://sqlite.org/src/info/ddb17d92df194337"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHECK(c1 IN(c1)), c1 INT);",
      "INSERT INTO t0(c1) VALUES('0'); -- sqlite3.c:86300: sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=188f912b51",
      "fix": "https://sqlite.org/src/info/9ab985a9c8160b90"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, CHECK(c0 IN (c0)));",
      "INSERT INTO t0 VALUES(0);",
      "UPDATE t0 SET c0 = 0; -- sqlite3.c:86323: sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9d708e4742",
      "fix": "https://www.sqlite.org/src/info/2c44c73499154bc5"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, CHECK(CASE c0 WHEN c0 THEN 0 END));",
      "INSERT INTO t0 VALUES('0'); -- sqlite3.c:86300: sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed (2)"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=c62c5e5852",
      "fix": "https://www.sqlite.org/src/info/36fdeb4f0a66970a"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE TABLE t0(c0 TEXT);",
      "CREATE INDEX i0 ON t0(0 LIKE COALESCE(c0, 0));",
      "INSERT INTO t0(c0) VALUES (0), (0); -- sqlite3.c:75871: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)' failed (2)"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=3ab4a9f02c",
      "fix": "https://www.sqlite.org/src/info/0b1dbd60"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "SELECT * FROM t0 WHERE (t0.c0, 1) IN(SELECT NTILE(1) OVER(), 0 FROM t0); -- sqlite3.c:90197: sqlite3VdbeExec: Assertion `pC!=0' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pC!=0' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=dfd66334cf",
      "fix": "https://sqlite.org/src/info/2f17974912ec5e99"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "SELECT * FROM t0 LEFT JOIN t1 WHERE (t1.c0 BETWEEN 0 AND 0) > ('' AND t0.c0); -- sqlite3.c:103271: impliesNotNullRow: Assertion `pWalker->eCode==0' failed."
    ],
    "title": "Debug assertion impliesNotNullRow: Assertion `pWalker->eCode==0' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b383b90278",
      "fix": "https://sqlite.org/src/info/401c9d30e06191d9"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, CHECK(c0 BETWEEN 0 AND +c0));",
      "INSERT INTO t0 VALUES (0);",
      "UPDATE t0 SET c0 = 0; -- sqlite3.c:86402: sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed (2)"
  },
  {
    "date": "26/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=ec8abb025e",
      "fix": "https://www.sqlite.org/src/info/e54560495926fbb8"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE AS(0), c1, c2);",
      "INSERT INTO t0(c1) VALUES(0);",
      "UPDATE t0 SET c1 = 0, c2 = 0 WHERE(c0) >= 0; -- sqlite3.c:72305: sqlite3BtreeInsert: Assertion `pCur->curFlags & BTCF_ValidNKey' failed."
    ],
    "title": "Debug assertion sqlite3BtreeInsert: Assertion `pCur->curFlags & BTCF_ValidNKey' failed"
  },
  {
    "date": "27/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=fb3b3024ea",
      "fix": "https://sqlite.org/src/info/846b1de6e5a9e418"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "PRAGMA locking_mode = EXCLUSIVE;",
      "PRAGMA journal_mode = WAL;",
      "PRAGMA locking_mode = NORMAL;",
      "PRAGMA integrity_check;",
      "PRAGMA journal_mode = MEMORY; -- sqlite3.c:51926: assert_pager_state: Assertion `pPager->changeCountDone==0 || pPager->eLock>=RESERVED_LOCK' failed."
    ],
    "title": "Debug assertion assert_pager_state: Assertion `pPager->changeCountDone==0 || pPager->eLock>=RESERVED_LOCK' failed"
  },
  {
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=37823501c6",
      "fix": "https://www.sqlite.org/src/info/4cc12c18860bc480"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL DEFAULT '', c1 AS(c0) NOT NULL);",
      "REPLACE INTO t0(c0) VALUES(NULL); -- sqlite3.c:85112: sqlite3VdbeExec: Assertion `memIsValid(&aMem[pOp->p1])' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(&aMem[pOp->p1])' failed."
  },
  {
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=36ffedcb9a",
      "fix": "https://sqlite.org/src/info/597896ed0ae9e296"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "SELECT (0, 0) IN(SELECT MIN(c0), NTILE(0) OVER()) FROM t0; -- sqlite3.c:103486: exprSrcCount: Assertion `0' failed."
    ],
    "title": "Debug assertion exprSrcCount: Assertion `0' failed"
  },
  {
    "comment": "According to the SQLite developers, this bug report revealed a subtle problem n the new (unreleased) generated columns feature.",
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=5fbc159eeb",
      "fix": "https://sqlite.org/src/info/4cc12c18860bc480"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 NOT NULL DEFAULT 1, c1 AS(c0) UNIQUE);",
      "REPLACE INTO t0 VALUES(NULL); -- sqlite3.c:87334: sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed"
  },
  {
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=de4b04149b",
      "fix": "https://sqlite.org/src/info/6afadd3b3a40b0ef"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA foreign_keys = true;",
      "CREATE TABLE t0(c0 INT AS(2) UNIQUE, c1 TEXT UNIQUE, FOREIGN KEY(c0) REFERENCES t0(c1));",
      "INSERT INTO t0(c1) VALUES(0.16334143182538696), (0); -- sqlite3.c:75926: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed"
  },
  {
    "date": "31/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=46fcd700b8",
      "fix": "https://www.sqlite.org/src/info/eca7ec9cda4606c4"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA foreign_keys = true;",
      "CREATE TABLE t0(c0 TEXT PRIMARY KEY, c1 INT UNIQUE REFERENCES t0 CHECK(CAST(c1 AS INT) BETWEEN 0 AND CASE WHEN 1 THEN c0 END));",
      "REPLACE INTO t0(c0, c1) VALUES(0.7675826647230917, 0), (0, x''); -- sqlite3.c:75952: sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed."
    ],
    "title": "Debug assertion sqlite3VdbeMemAboutToChange: Assertion `(mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r' failed (2)"
  },
  {
    "date": "08/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=82ac75ba00",
      "fix": "https://www.sqlite.org/src/info/6db1c3498f6bfa01"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0 VALUES('0');",
      "CREATE VIEW v0(c0) AS SELECT CAST(0 AS INT) FROM t0;",
      "SELECT * FROM t0, v0 WHERE 0 >= t0.c0 AND t0.c0 = v0.c0; -- unexpected: fetches row"
    ],
    "title": "Incorrect result for query with 0 >= t0.c0 AND t0.c0 = v0.c0 condition"
  },
  {
    "date": "10/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=e0c2ad1aa8",
      "fix": "https://www.sqlite.org/src/info/101f7dea75a203f1"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL, c1 REAL GENERATED ALWAYS AS (c0));",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT * FROM t0 GROUP BY c0; -- expected: 1.0|1.0, actual: 1.0|1",
      "SELECT * FROM t0; -- 1.0|1.0"
    ],
    "title": "GROUP BY causes unexpected conversion"
  },
  {
    "date": "04/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=1b8d726456",
      "fix": "https://www.sqlite.org/src/info/4a5851893c3d71cc"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES ('\uc706'), (1);",
      "SELECT MAX(CASE 1 WHEN 1 THEN t0.c0 END) FROM t0; -- \uc706",
      "SELECT MAX(t0.c0) FROM t0; -- 1"
    ],
    "title": "MAX yields unexpected result for UTF-16"
  },
  {
    "date": "05/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=fa146dcfe6",
      "fix": "https://www.sqlite.org/docsrc/info/e751b0c91a80dd31"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 1) COLLATE NOCASE as a UNION SELECT CHAR(0, 0) as a); -- 0000",
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 0) COLLATE NOCASE as a UNION SELECT CHAR(0, 1) as a); -- 0001"
    ],
    "title": "Unexpected result for MIN on string that contains a null character"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "fixed_version": "8.0.21",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99122" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 DOUBLE);",
      "INSERT INTO t0 VALUES(0);",
      "INSERT INTO t1 VALUES('-0');",
      "SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0; -- expected: {0, -0}, actual: {}"
    ],
    "title": "A predicate that compares 0 with -0 yields an incorrect result",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99127" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT * FROM t0 WHERE 0.9 > t0.c0; -- expected: {0}, actual: {}"
    ],
    "title": "Incorrect result when comparing an UNSIGNED INT with a floating-point number",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99130" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 INT UNIQUE);",
      "INSERT INTO t0(c1) VALUES(1);",
      "SELECT * FROM t0 WHERE t0.c1 BETWEEN 0 AND (\"\\n2\"); -- expected: {NULL, 1}, actual: {}"
    ],
    "title": "BETWEEN malfunctions when comparing a string containing a newline",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99135" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT * FROM t0 WHERE t0.c0 BETWEEN 18446744073561222871 AND 0; -- expected: {0}, actual: {}?"
    ],
    "title": "BETWEEN malfunctions when comparing large numbers",
    "version": "8.0.19"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99145" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE 0.9 > t0.c0; -- expected: {0}, actual: {}"
    ],
    "title": "Incorrect result when comparing a floating-point number with an integer"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99146" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 FLOAT UNIQUE);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE t0.c0 BETWEEN 0 AND '1e500'; -- expected: {0}, actual: {}"
    ],
    "title": "Comparison on FLOAT column and large value malfunctions"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99149" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(0);",
      "CREATE INDEX i0 ON t0(c0(1));",
      "SELECT * FROM t0 WHERE t0.c0 NOT BETWEEN '\u05a3a' AND NULL; -- expected: {0}, actual: {}"
    ],
    "title": "BETWEEN query malfunctions for special character and TEXT index"
  },
  {
    "date": "25/04/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=45f4bf4eb4",
      "fix": "https://www.sqlite.org/src/info/ac31edd3eeafcef4"
    },
    "oracle": "TLP (DISTINCT)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE VIEW v0(c0) AS SELECT CAST(t0.c0 AS INTEGER) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 LEFT JOIN v0 ON v0.c0 >= '0' WHERE TRUE UNION SELECT 0,0 WHERE 0; -- expected: {0|0}, actual:{0|NULL}"
    ],
    "title": "UNION operator malfunctions in LEFT JOIN on view"
  },
  {
    "date": "24/08/2020",
    "dbms": "SQLite",
    "links": {
      "bugreports": "https://www.sqlite.org/src/tktview?name=f3ff147288",
      "fix": "https://www.sqlite.org/src/info/4236103379df0b3d"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": ["SELECT (1 IN (2 IS TRUE)); -- expected: {1}, actual: {0}"],
    "title": "Incorrect result for IN expression with right-hand IS TRUE sub-expression"
  },
  {
    "date": "27/08/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=be31cf009c",
      "fix": "https://www.sqlite.org/docsrc/info/153857859d220dbd"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": ["SELECT 1 % '1E1'; -- expected: {1.0}, actual: {0.0}"],
    "title": "Unexpected result for % and '1E1'"
  },
  {
    "comment": "After we reported this bug, a test case for the same bug was found using a fuzzer and reported on the SQLite mailing list",
    "date": "07/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=8fe768e9c9",
      "fix": "https://www.sqlite.org/src/info/31e85fbbc4cfd09a"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "BEGIN TRANSACTION;",
      "INSERT INTO vt0(c0) VALUES (NULL);",
      "ALTER TABLE t0 ADD COLUMN c5 REAL;",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected: database disk image is malformed"
    ],
    "title": "FTS integrity-check malfunctions"
  },
  {
    "date": "07/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=265e935b26",
      "fix": "https://www.sqlite.org/src/info/8ab0aebdb3c2d6fb"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(a);",
      "PRAGMA reverse_unordered_selects = true;",
      "INSERT INTO vt0 VALUES('365062398'), (0), (0);",
      "INSERT INTO vt1(vt1, rank) VALUES('pgsz', '38');",
      "UPDATE vt0 SET a = 399905135; -- unexpected: database disk image is malformed",
      "INSERT INTO vt1(vt1) VALUES('integrity-check');"
    ],
    "title": "FTS pgsz option results in \"database disk image is malformed\" error"
  },
  {
    "date": "07/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e258f008ce",
      "fix": "https://www.sqlite.org/src/info/238e0835714696ab"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0(c0) VALUES (NULL);",
      "BEGIN TRANSACTION;",
      "INSERT INTO vt0(vt0) VALUES('rebuild');",
      "INSERT INTO vt0(vt0) VALUES('rebuild');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS rebuild in transaction causes integrity-check to fail"
  },
  {
    "date": "09/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=81a7f7b9e2",
      "fix": "https://www.sqlite.org/src/info/75775c5ab44e497c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1);",
      "INSERT INTO vt0(vt0, rank) VALUES('pgsz', '70000');",
      "INSERT INTO vt0(c0) VALUES (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0);",
      "UPDATE vt0 SET c1 = 'T,D&p^y/7#3*v<b<4j7|f';",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS integrity-check indicates that the database disk image is malformed"
  },
  {
    "date": "09/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d392017c8e",
      "fix": "https://www.sqlite.org/src/info/86e497209217abb7"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA reverse_unordered_selects = true;",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2000);",
      "INSERT INTO vt0(vt0, rank) VALUES('automerge', 0);",
      "INSERT INTO vt0(c0) VALUES (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0),(0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0);",
      "INSERT INTO vt0(vt0) VALUES('rebuild'); -- database or disk is full"
    ],
    "title": "FTS rebuild in combination with crisismerge results in error \"database or disk is full\""
  },
  {
    "date": "11/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=8a6fa2bb22",
      "fix": "https://www.sqlite.org/src/info/5863546df99abd1a"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=DESC);",
      "INSERT INTO vt0(c0) VALUES (0), (0);",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); --database disk image is malformed"
    ],
    "title": "FTS order=DESC results into integrity-check failing"
  },
  {
    "date": "11/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=745f1abcdc",
      "fix": "https://www.sqlite.org/src/info/4ed905b18847d4db"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0, prefix=1);",
      "BEGIN;",
      "INSERT INTO vt0 VALUES (0);",
      "INSERT INTO vt0(vt0) VALUES('optimize');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS integrity-check malfunctions for transaction and the prefix option"
  },
  {
    "date": "11/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=278ac14262",
      "fix": "https://www.sqlite.org/src/info/629e20c9880acc2c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0);",
      "INSERT INTO vt0 VALUES (x'00');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS integrity_check fails when inserting x'00'"
  },
  {
    "date": "17/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=bf1aab8978",
      "fix": "https://www.sqlite.org/src/info/35beaee059a6ccce"
    },
    "oracle": "hang",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=DESC);",
      "INSERT INTO vt0(c0) VALUES (0);",
      "INSERT INTO vt0(c0) VALUES (0);",
      "UPDATE vt0 SET c0 = NULL;",
      "INSERT INTO vt0(vt0) VALUES('merge=1,4'); -- unexpected: does not terminate"
    ],
    "title": "FTS merge does not terminate"
  },
  {
    "date": "24/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=dd1f67bf25",
      "fix": "https://www.sqlite.org/src/info/8d964e1c21d4cea6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = \"ascii\", prefix = 1);",
      "INSERT INTO vt0(c0) VALUES (x'd1');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected error: database disk image is malformed"
    ],
    "title": "FTS integrity-check malfunctions nondeterministically with tokenize=\"ascii\""
  },
  {
    "date": "31/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=b9befa4b83",
      "fix": "https://sqlite.org/src/info/40d3282ec285d9f7"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1, c2 AS(1), PRIMARY KEY(c0) FOREIGN KEY(c2) REFERENCES t0);",
      "CREATE VIRTUAL TABLE vt0 USING fts4;",
      "CREATE INDEX i0 ON t0(c2, 0 BETWEEN '' AND c1 COLLATE BINARY, CASE '' WHEN c3 THEN 0 WHEN 0 THEN 0 WHEN '' THEN 0 WHEN 0 THEN c0 ELSE c1 END);",
      "INSERT INTO t0 VALUES (0, 0), ('', 0);",
      "PRAGMA foreign_keys = true;",
      "ANALYZE;",
      "UPDATE t0 SET c1 = c0; -- unexpected: Segmentation fault"
    ],
    "title": "Segfault in table with generated column and foreign key"
  },
  {
    "date": "1/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=c28a01da72",
      "fix": "https://sqlite.org/src/info/bc6a43e7ee6353b9"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1 a UNIQUE AS (1), c2, c3, FOREIGN KEY(c3) REFERENCES t0(c1));",
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0);",
      "PRAGMA foreign_keys = true;",
      "INSERT INTO vt0 VALUES (0);",
      "REPLACE INTO t0(c3, c2, c0) VALUES (0, 0, 0), (0, 0, 0); -- Segmentation fault"
    ],
    "title": "REPLACE causes segfault in table with generated column and foreign key"
  },
  {
    "date": "7/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=7e59041f9c",
      "fix": "https://www.sqlite.org/src/info/b59f94e4da9b1653"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO t0(c0) VALUES (1), (0);",
      "INSERT INTO vt0(c0) VALUES (0), (0);",
      "CREATE VIEW v0 AS SELECT DISTINCT t0.c0 FROM vt0, t0 ORDER BY vt0.rowid;",
      "SELECT * FROM v0; -- unexpected: 4 rows are fetched"
    ],
    "title": "DISTINCT malfunctions for VIEW with virtual table"
  },
  {
    "date": "04/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=a55ab6d97d",
      "fix": "https://www.sqlite.org/src/info/f898d04cf272ef01"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "INSERT INTO rt0(c2) VALUES(NULL);",
      "SELECT * FROM rt0 WHERE rt0.c2 >= 'a'; -- unexpected: fetches row"
    ],
    "title": "Incorrect result for TEXT comparison on rtree table"
  },
  {
    "date": "05/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=30e2c183b6",
      "fix": "https://www.sqlite.org/src/info/d43e0efb9642037d"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "INSERT INTO rt0(c0) VALUES(0);",
      "SELECT * FROM rt0 WHERE rt0.c0 = NULL; -- unexpected: row is fetched"
    ],
    "title": "column = NULL predicate evaluates to TRUE for rtree table"
  },
  {
    "date": "05/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9fe487ba3c",
      "fix": "https://www.sqlite.org/src/info/7ae8c0d52f6aa7f2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, a, b);",
      "CREATE VIRTUAL TABLE rt1 USING rtree(c0, a, b);",
      "INSERT INTO rt1(c0) VALUES (x'00');",
      "INSERT INTO rt0(c0) VALUES ('a');",
      "SELECT * FROM rt1, rt0 WHERE rt0.c0 = CAST(rt1.c0 AS TEXT); -- unexpected: row is fetched"
    ],
    "title": "Join on two rtree tables malfunctions"
  },
  {
    "date": "05/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=f096d191b6",
      "fix": "https://www.sqlite.org/src/info/b7810062ec2489e1"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "INSERT INTO rt0(c2) VALUES(NULL);",
      "INSERT INTO t0 VALUES(0);",
      "SELECT * FROM rt0, t0 WHERE (t0.c0, 0) > (rt0.c2, 0); -- unexpected: row is fetched"
    ],
    "title": "Row value comparison malfunctions with rtree table"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=aa573a787b",
      "fix": "https://www.sqlite.org/src/info/32772dfd50b602c0"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2 INT);",
      "INSERT INTO rt0(c2) VALUES(0);",
      "SELECT * FROM rt0 WHERE '0' = rt0.c2; -- unexpected: row is not fetched"
    ],
    "title": "Comparison on INT column in rtree table malfunctions"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=367a86e288",
      "docs fix": "https://www.sqlite.org/docsrc/info/8199b59a39c017c7",
      "fix": "https://www.sqlite.org/src/info/97fb5a72f91a44d5"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "INSERT INTO rt0(c1) VALUES(0);",
      "SELECT * FROM rt0 WHERE rt0.c1 > '-1'; -- unexpected: row is fetched"
    ],
    "title": "Incorrect result for predicate on rtree table"
  },
  {
    "date": "06/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=8bf76328ac",
      "docs fix": "https://www.sqlite.org/docsrc/info/c3ab325994a8f495"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 NOT NULL);",
      "INSERT INTO rt0(c3) VALUES(NULL); -- unexpected: inserting NULL succeeds",
      "SELECT 0 in (rt0.c3) ISNULL FROM rt0; -- expected: 1, actual: 0"
    ],
    "title": "NOT NULL auxiliary column in rtree table malfunctions"
  },
  {
    "date": "11/12/2019",
    "dbms": "SQLite",
    "links": { "fix": "https://www.sqlite.org/src/info/840de36df1aaeb4b" },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIRTUAL TABLE vt0 USING rtree(c0, c1, c2);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT * FROM t0 LEFT JOIN vt0 ON c2 IN (0) WHERE c1 IN (NULL);"
    ],
    "title": "LEFT JOIN segfault on rtree table"
  },
  {
    "date": "11/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=cf36cb4e02",
      "commit": "https://www.sqlite.org/src/info/c16305eba0eb1436"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (x'46f0');",
      "UPDATE vt0 SET c0=NULL;",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for UTF-16 encoding after update"
  },
  {
    "date": "14/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b439bfcfb7",
      "fix": "https://www.sqlite.org/src/info/2401e04730a156aa"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS(1 >= 1), c1 UNIQUE AS(TYPEOF(c0)), c2);",
      "CREATE VIRTUAL TABLE t1 USING fts4;",
      "INSERT INTO t0 VALUES(0);",
      "REINDEX; -- segfault"
    ],
    "title": "REINDEX segfaults on table with generated columns"
  },
  {
    "date": "19/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=56a74875be",
      "fix": "https://www.sqlite.org/src/info/eb95dac7f6482c36"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE t0 USING rtree(c0, c1, c2);",
      "INSERT INTO t0(c1) VALUES(0), (0);",
      "UPDATE t0 SET c0 = (SELECT 1 FROM t0); -- unexpected: database table is locked"
    ],
    "title": "UPDATE causes \"database table is locked\" for rtree table"
  },
  {
    "date": "20/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=e431c35542",
      "commit": "https://sqlite.org/src/info/a1ba9a37d7a68a6d"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (x'3078');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for UTF-16 encoding"
  },
  {
    "date": "21/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=cd3311e323",
      "commit": "https://sqlite.org/src/info/70815e273f511481"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0, languageid=\"lid\");",
      "INSERT INTO vt0 VALUES (0), (1);",
      "BEGIN;",
      "UPDATE vt0 SET lid = 1;",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected: database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for update on languageid"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=9cb7d0ef44",
      "fix": "https://sqlite.org/src/info/45748e2db028ffbd"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "PRAGMA locking_mode = EXCLUSIVE;",
      "PRAGMA journal_mode = PERSIST;",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0(vt0) VALUES('integrity-check');",
      "INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- sqlite3.c:213961: fts5StructureRead: Assertion `p->iStructVersion!=0' failed."
    ],
    "title": "Debug assertion fts5StructureRead: Assertion `p->iStructVersion!=0' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=7929c1efb2",
      "fix": "https://sqlite.org/src/info/ef604882a275d3d5"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT 0 GROUP BY 1;",
      "SELECT * FROM v0, t0 LEFT JOIN vt0 ON vt0.c0 MATCH 1 WHERE v0.c0 == 0; -- sqlite3.c:143296: constructAutomaticIndex: Assertion `!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0' failed."
    ],
    "title": "Debug assertion constructAutomaticIndex: Assertion `!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=0911b5d161",
      "fix": "https://www.sqlite.org/src/info/f347744e0d576f02"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE t0 USING fts5(c0);",
      "INSERT INTO t0(c0) VALUES (x'00');",
      "SELECT * FROM t0 WHERE CAST(SUBSTR(c0, 0) AS TEXT) > 0; -- sqlite3.c:81076: sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed."
    ],
    "title": "Debug assertion sqlite3MemCompare: Assertion `pMem1->enc==pMem2->enc || pMem1->db->mallocFailed' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=5eadca17c4",
      "fix": "https://sqlite.org/src/info/4c50afafce841636"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0 VALUES (0), (1);",
      "INSERT INTO rt0(c0) VALUES (0), (1);",
      "CREATE VIEW v0 AS SELECT 0 LIMIT 0;",
      "SELECT * FROM t0 LEFT JOIN rt0 INNER JOIN v0; -- sqlite3.c:185720: rtreeRelease: Assertion `pRtree->nNodeRef==0 || pRtree->bCorrupt' failed."
    ],
    "title": "Debug assertion rtreeRelease: Assertion `pRtree->nNodeRef==0 || pRtree->bCorrupt' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=d62981b76d",
      "fix": "https://www.sqlite.org/src/info/a11b393dc2c882cf"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt1 USING fts5(c1, c2, prefix = 1, tokenize = \"porter ascii\");",
      "INSERT INTO vt1 VALUES (x'e4', '+\u452c+');",
      "INSERT INTO vt1(vt1) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for special characters in table"
  },
  {
    "comment": "This was not considered a bug. However, to clarify, a section \"Reading And Writing At The Same Time\" was added to the rtree documentation.",
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=cafeafe605"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2);",
      "INSERT INTO rt0(c0) VALUES (0), (1), (2);",
      "UPDATE rt0 SET c0 = 0 WHERE(SELECT ROW_NUMBER() OVER() FROM rt0); -- database table is locked"
    ],
    "title": "UPDATE with complex WHERE condition on rtree results in \"database table is locked\" error"
  },
  {
    "date": "24/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=df46a6f38e",
      "fix": "https://www.sqlite.org/src/info/1c0a05b09a97e6e2"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 71, tokenize = \"porter ascii\", prefix = 9);",
      "BEGIN;",
      "INSERT INTO vt0(c0) VALUES (x'e9');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- sqlite3.c:213028: sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed"
    ],
    "title": "Debug assertion sqlite3Fts5HashScanNext: Assertion `!sqlite3Fts5HashScanEof(p)' failed"
  },
  {
    "date": "24/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=752fdbf6e7",
      "fix": "https://sqlite.org/src/info/bae060f382e4386c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1);",
      "INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37');",
      "INSERT INTO vt0(c0, c1) VALUES (0.66077, 1957391816);",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- unexpected: database disk image is malformed"
    ],
    "title": "FTS database disk image is malformed for UTF-16 encoding and integrity check"
  },
  {
    "date": "25/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=167b2aac34",
      "fix": "https://www.sqlite.org/src/info/a5d7f5d24a239f72"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "CREATE VIRTUAL TABLE vt1 USING fts4(c0);",
      "INSERT INTO vt1(c0) VALUES(0);",
      "BEGIN;",
      "UPDATE vt1 SET c0 = 0;",
      "INSERT INTO vt1(c0) VALUES (0), (0);",
      "UPDATE vt0 SET c0 = 0;",
      "INSERT INTO vt1(c0) VALUES (0);",
      "UPDATE vt1 SET c0 = 0;",
      "INSERT INTO vt1(vt1) VALUES('automerge=1');",
      "UPDATE vt1 SET c0 = 0;",
      "DROP TABLE vt1; -- sqlite3.c:219981: fts5CheckTransactionState: Assertion `iSavepoint<=p->ts.iSavepoint' failed"
    ],
    "title": "Debug assertion fts5CheckTransactionState: Assertion `iSavepoint<=p->ts.iSavepoint' failed"
  },
  {
    "date": "25/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=d87336c81c",
      "fix": "https://www.sqlite.org/src/info/fa58aad48a788802"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE t0 USING rtree(c0, c1, c2);",
      "SELECT * FROM t0 WHERE ((0, 0) IN (SELECT COUNT(*), LAG(5) OVER(PARTITION BY 0) FROM t0), 0) <= (t0.c1, 0); -- sqlite3.c:98053: sqlite3TableColumnAffinity: Assertion `iCol<pTab->nCol' failed."
    ],
    "title": "Debug assertion sqlite3TableColumnAffinity: Assertion `iCol<pTab->nCol' failed."
  },
  {
    "date": "27/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=1dc432db3b",
      "documentation": "https://www.sqlite.org/fts3.html#_utf_16_byte_order_mark_problem_"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "PRAGMA encoding = 'UTF-16';",
      "CREATE VIRTUAL TABLE vt0 USING fts4(c0);",
      "INSERT INTO vt0 VALUES ('\ufeff');",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS4 integrity-check results in \"database disk image is malformed\" for UTF-16 encoding"
  },
  {
    "date": "30/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www3.sqlite.org/src/tktview?name=7c0e06b162",
      "fix": "https://www3.sqlite.org/src/info/ab09ef427181130b"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1);",
      "CREATE VIRTUAL TABLE vt1 USING fts5(c0);",
      "INSERT INTO vt1(c0) VALUES ('');",
      "SELECT * FROM vt1 NATURAL JOIN vt0 WHERE vt0.c1 MATCH 'a'; -- parse error in rank function:"
    ],
    "title": "NATURAL JOIN on virtual table results in \"parse error in rank function\""
  },
  {
    "date": "02/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=771fe61761",
      "fix": "https://www.sqlite.org/src/info/e782096aa06fcf41"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "PRAGMA encoding = 'UTF16';",
      "CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
      "INSERT INTO vt0 VALUES (SUBSTR(x'37', ''));",
      "INSERT INTO vt0(vt0) VALUES('integrity-check'); -- database disk image is malformed"
    ],
    "title": "FTS5 integrity-check results in \"database disk image is malformed\" for UTF-16 encoding and SUBSTR"
  },
  {
    "date": "04/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=727074e2ae",
      "fix": "https://www.sqlite.org/src/info/74ef6f2b6d9f50ff"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE stat USING dbstat;",
      "SELECT * FROM stat WHERE stat.aggregate == NULL; -- unexpected: row is fetched"
    ],
    "title": "DBSTAT query computes incorrect result for aggregate column"
  },
  {
    "date": "04/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=74a4c3860c",
      "fix": "https://www.sqlite.org/src/info/cfff5cb2279088aa"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE VIRTUAL TABLE stat USING dbstat;",
      "SELECT * FROM stat WHERE stat.name = NULL; -- unexpected: row is fetched"
    ],
    "title": "DBSTAT query computes incorrect result for name column"
  }
]
