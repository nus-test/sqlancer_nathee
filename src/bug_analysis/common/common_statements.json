[
  {
    "comment": "This bug was classified as \"severe\" and had existed since 2013.",
    "date": "28/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/3182d3879020ef3b2e6db56be2470a0266d3c773",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-April/084293.html",
      "fix": "https://www.sqlite.org/src/info/1b1dd4d48cd79a58"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c1 TEXT PRIMARY KEY) WITHOUT ROWID;",
      "CREATE INDEX index_0 ON test(c1 COLLATE NOCASE);",
      "INSERT INTO test(c1) VALUES ('A');",
      "INSERT INTO test(c1) VALUES ('a');",
      "SELECT * FROM test; -- only one row is fetched"
    ],
    "title": "COLLATE nocase index on a WITHOUT ROWID table malfunctions"
  },
  {
    "date": "1/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084334.html",
      "fix": "https://www.sqlite.org/src/info/b043a54c3de54b28"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE test (c0 REAL);",
      "CREATE INDEX index_0 ON test(c0 COLLATE NOCASE);",
      "INSERT INTO test(c0) VALUES ('+/');",
      "SELECT * FROM test WHERE (c0 LIKE '+/'); -- fetches no row"
    ],
    "title": "COLLATE NOCASE index on REAL column malfunctions"
  },
  {
    "comment": "Note that this was not a bug in the code. Rather, the documentation was not very clear on this is.",
    "date": "2/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084347.html"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE TABLE test (c0 NOT NULL);",
      "INSERT INTO test(c0) VALUES (NULL) ON CONFLICT DO NOTHING; -- results in an error",
      "INSERT OR IGNORE INTO test(c0) VALUES (NULL); -- does not result in an error"
    ],
    "title": "UPSERT documentation issue"
  },
  {
    "comment": "This issue was classified as \"severe\", was since 2013 in SQLite, and was a bug in the theorem prover.",
    "date": "4/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=5c6955204c",
      "email": "https://www.mail-archive.com/sqlite-users@mailinglists.sqlite.org/msg115136.html",
      "fix": "https://www.sqlite.org/src/info/c2e439bccc40825e211bf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX index_0 ON t0(c0) WHERE (~c0) NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched"
    ],
    "title": "Incorrect result on a table scan of a partial index"
  },
  {
    "date": "6/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084426.html",
      "fix": "https://sqlite.org/src/info/91f701d39852ef1ddb29"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 INTEGER, PRIMARY KEY (c0)) WITHOUT ROWID;",
      "ALTER TABLE t0 RENAME COLUMN c0 TO c1; -- no such column: c0"
    ],
    "title": "ALTER TABLE fails when renaming an INTEGER PRIMARY KEY column in a WITHOUT ROWID table"
  },
  {
    "date": "8/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084478.html",
      "fix": "https://www.sqlite.org/src/info/740201107ae802c1"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE COLLATE NOCASE);",
      "INSERT INTO t0(c0) VALUES ('./');",
      "SELECT * FROM t0 WHERE t0.c0 LIKE './'; -- fetches no rows"
    ],
    "title": "'./' LIKE './' does not match"
  },
  {
    "comment": "This bug was classified as \"severe\" and existed in SQLite since 2015.",
    "date": "9/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/6c1d3febc00b22d457c7",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084483.html",
      "fix": "https://www.sqlite.org/src/info/9b0915272f4d4052"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);",
      "INSERT INTO t1(c0, c1) VALUES (TRUE, 9223372036854775807), (TRUE, 0);",
      "UPDATE t1 SET c0 = NULL;",
      "UPDATE OR REPLACE t1 SET c1 = 1;",
      "SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL); -- database disk image is malformed"
    ],
    "title": "Malformed database image when using a REAL PRIMARY KEY"
  },
  {
    "date": "10/5/2019",
    "dbms": "SQLite",
    "links": {
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084497.html",
      "fix": "https://www.sqlite.org/src/info/db9acef14d492121"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT 1e500 >= 1,  CAST(1e500 AS INT) >= CAST(1 AS INT), ROUND(1e500) >= ROUND(1); -- 1|1|0"
    ],
    "title": "Incorrect handling of Infinity by the ROUND function"
  },
  {
    "comment": "This bug was classified as \"critical\" and was in SQLite since 2013.",
    "date": "11/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview/80256748471a01",
      "email": "http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-May/084499.html",
      "fix": "https://sqlite.org/src/info/0ba6d709"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE IF NOT EXISTS t0 (c0);",
      "CREATE INDEX IF NOT EXISTS i0 ON t0(1) WHERE c0 NOT NULL;",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE t0.c0 IS NOT 1; -- returns no row"
    ],
    "title": "Partial NOT NULL index malfunctions with IS NOT/!="
  },
  {
    "date": "16/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=3c27b97e31",
      "fix": "https://www.sqlite.org/src/info/14c00b1016ba53ab"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "CREATE TABLE t1 (c1 REAL);",
      "INSERT INTO t1(c1) VALUES (8366271098608253588);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t1 WHERE (t1.c1 = CAST(8366271098608253588 AS REAL)); -- fetches row",
      "SELECT * FROM t0, t1 WHERE (t1.c1 = CAST(8366271098608253588 AS REAL)); -- fetches no row",
      "SELECT * FROM t0, t1 WHERE (t1.c1 >= CAST(8366271098608253588 AS REAL) AND t1.c1 <= CAST(8366271098608253588 AS REAL)); -- fetches row"
    ],
    "title": "REAL rounding seems to depend on FROM clause"
  },
  {
    "date": "18/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/info/787fa716be3a7f650c",
      "fix": "https://sqlite.org/src/info/778b1224a318d013"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1, PRIMARY KEY (c0, c1));",
      "CREATE TABLE t1 (c0);",
      "INSERT INTO t1 VALUES (2);",
      "SELECT * FROM t0, t1 WHERE (t0.c1 >= 1 OR t0.c1 < 1) AND t0.c0 IN (1, t1.c0) ORDER BY 1; -- results in a segfault"
    ],
    "title": "Query results in a SEGFAULT"
  },
  {
    "comment": "This bug report resulted in a change of the accepted SQL dialect, disallowing strings in double quotes when creating indexes.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/9b78184be266fd7084e9e8038ad631a21b37eb9e",
      "fix1": "https://www.sqlite.org/src/info/1685610e",
      "fix2": "https://www.sqlite.org/src/info/3e1b55f3ab85710e"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1, c2);",
      "INSERT INTO t0(c1, c2) VALUES  ('a', 1);",
      "CREATE INDEX i0 ON t0(\"C3\");",
      "ALTER TABLE t0 RENAME COLUMN c1 TO c3;",
      "SELECT DISTINCT * FROM t0; -- fetches C3|1 rather than a|1"
    ],
    "title": "Index on non-existing column results in a fabricated value being fetched"
  },
  {
    "comment": "This bug uncovered that the compiler somtimes confuses x IS TRUE with x IS FALSE, and the other way around.",
    "date": "19/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d3e7f2ba5b",
      "fix": "https://www.sqlite.org/src/info/99eba69b3a64741c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES ('val');",
      "SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE OR (t0.c0 IN (-1)))) IS 0); -- fetches no row"
    ],
    "title": "Nested boolean formula with IN operator computes an incorrect result"
  },
  {
    "date": "21/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/b5ca442af9fadf5eff5b2bf64839516ab82cfc3d",
      "fix": "https://www.sqlite.org/src/info/b8071d10cba8f6c1"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Cosmetic",
    "status": "fixed",
    "test": [
      "CREATE TABLE IF NOT EXISTS t0(c0);",
      "INSERT INTO t0(c0) VALUES (-9223372036854775808);",
      "BEGIN TRANSACTION;",
      "CREATE INDEX i0 ON t0(ABS(c0)); -- integer overflow (expected)",
      "COMMIT; -- unexpected: the index is still created",
      "CREATE INDEX i0 ON t0(1); -- malformed database schema (i0) - index i0 already exists"
    ],
    "title": "\"Malformed database schema\" when creating a failing index within a transaction"
  },
  {
    "date": "25/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=4c2d7639f0",
      "fix": "https://www.sqlite.org/src/info/67a68af5578f08d2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT CAST('-' AS NUMERIC); -- unexpected: computes 0.0 rather than 0"
    ],
    "title": "CAST('-' AS NUMERIC) computes 0.0"
  },
  {
    "date": "25/5/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e8bedb2a18",
      "fix": "https://www.sqlite.org/src/info/67a68af5578f08d2"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT '' - 2851427734582196970; -- actual: -2851427734582196736, expected: -2851427734582196970"
    ],
    "title": "Incorrect result when subtracting a large integer number from a TEXT value"
  },
  {
    "date": "08/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/dd6bffbfb6e61db9ecc9ea833d586427961ccc9d",
      "fix": "https://www.sqlite.org/src/info/c0c90961b4fa1c11"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 TEXT);",
      "INSERT INTO t0(c0) VALUES ('1.0');",
      "SELECT CAST(c0 AS NUMERIC) FROM t0; -- expected: 1, actual: 1.0"
    ],
    "title": "CAST to NUMERIC no longer converts to INTEGER"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/fd76310a5e843e074a30ed98b859dd0be11d0276",
      "fix": "https://sqlite.org/src/info/567b13093956185b"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0('1' IN ());",
      "ALTER TABLE t0 RENAME TO t1; -- error in index i0: no such column: 1"
    ],
    "title": "TEXT value interpreted as column name in an index with empty list in an IN expression"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b1d8c79314",
      "fix": "https://sqlite.org/src/info/94b58ab059cba977"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT PRIMARY KEY COLLATE NOCASE);",
      "INSERT INTO t0 VALUES (' 1-');",
      "SELECT * FROM t0 WHERE t0.c0 LIKE ' 1-'; -- expected: ' 1-', actual: no row is fetched"
    ],
    "title": "LIKE malfunctions for INT PRIMARY KEY COLLATE NOCASE column"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=533010b8ca",
      "fix": "https://www.sqlite.org/src/info/71643deb"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t1 (c0);",
      "CREATE INDEX i0 ON t1((LIKELIHOOD(c0, 100) IN ())); -- unexpected: no error",
      "ALTER TABLE t1 RENAME COLUMN c0 TO c1; -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\""
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=412bba9b22",
      "fix": "https://www.sqlite.org/src/info/57050162294efec9"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": ["SELECT -'.'; -- expected: 0, actual: 0.0"],
    "title": "CAST('.' AS NUMERIC) computes 0.0 rather than 0"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/d60b3cd7cb0bdff8ff39f76c9faf16ba2efa442f",
      "fix": "https://www.sqlite.org/docsrc/info/722f0828b3074e89"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT ((CAST(1 as INT)) COLLATE BINARY) == '1'; -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression has an affinity"
  },
  {
    "date": "10/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/533010b8cacebe82533a8cd4e230fbb819565115",
      "fix": "https://www.sqlite.org/src/info/04bd5cb73287f926"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0(((LIKELIHOOD(1, 2)) AND ((1 IN ())))); -- unexpected: no error",
      "ALTER TABLE t0 RENAME TO t1; -- -- error occurs only here: second argument to likelihood() must be a constant between 0.0 and 1.0"
    ],
    "title": "Another case of Illegal argument to LIKELIHOOD() does not result in error when combined with \"IN ()\""
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=1819598c09",
      "fix": "https://www.sqlite.org/docsrc/info/e0f700bb6c8142c5"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed (in documentation)",
    "test": ["SELECT -'1.0'; -- expected: -1, actual: -1.0"],
    "title": "-'1.0' computes -1.0 rather than -1"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=57353f8243",
      "fix": "https://www.sqlite.org/src/info/0f748fe58bbbb7ce"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT (1 IN (CAST('1' as TEXT) COLLATE NOCASE)); -- expected: 0, actual: 1"
    ],
    "title": "COLLATE expression in the right side of an IN operator results in an affinity conversion"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=afdc5a29dc",
      "fix": "https://www.sqlite.org/docsrc/info/7a51b32537ac7e95"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT CAST('8.2250617031974513E18' AS NUMERIC); -- expected: 8225061703197451300, unexpected: 8.22506170319745e+18"
    ],
    "title": "Lossless conversion when casting a large TEXT number to NUMERIC is not performed"
  },
  {
    "date": "11/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0c620df60b",
      "fix": "https://www.sqlite.org/src/info/614ecb0af4703884"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "SELECT LIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT UNLIKELY(CAST(1 AS INT)) = '1'; -- expected: 0, actual: 1",
      "SELECT LIKELIHOOD(CAST(1 AS INT), 0.5) = '1'; -- expected: 0, actual: 1"
    ],
    "title": "LIKELY(), UNLIKELY() and LIKELIHOOD() have affinities"
  },
  {
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=4d01eda811",
      "fix": "https://www.sqlite.org/src/info/5c6146b56a75a94f"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "SELECT 0.5 IS TRUE COLLATE NOCASE; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE RTRIM; -- expected: 1, actual: 0",
      "SELECT 0.5 IS TRUE COLLATE BINARY; -- expected: 1, actual: 0"
    ],
    "title": "IS TRUE operator malfunctions with COLLATE and REAL value"
  },
  {
    "comment": "Opening this bug report also (indirectly) caused a discussion on the mailing list on how -0.0 should be printed by SQLite, with over 50 replies (see http://mailinglists.sqlite.org/cgi-bin/mailman/private/sqlite-users/2019-June/084857.html).",
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview/674385aeba91c774d47736f1aefd259b074dc5d3",
      "fix": "https://www.sqlite.org/src/info/491f0f9bbddb6302"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": ["SELECT CAST('-0.0' AS NUMERIC); -- expected: 0, unexpected: 0.0"],
    "title": "CAST('-0.0' AS NUMERIC) computes 0.0 rather than 0"
  },
  {
    "date": "12/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b148fa6105",
      "fix": "https://www.sqlite.org/docsrc/info/9f887f15e57978df"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed (in documentation)",
    "test": [
      "CREATE TABLE t0(c0 COLLATE NOCASE);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t0 WHERE CAST(t0.c0 AS TEXT) = 'A'; -- expected: no row is fetched, actual: a"
    ],
    "title": "CAST takes implicit COLLATE of its operand"
  },
  {
    "date": "14/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ce8717f088",
      "fix": "https://www.sqlite.org/src/info/b4a9e09e60213ccf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE COLLATE NOCASE);",
      "INSERT INTO t0(c0) VALUES ('.1%');",
      "SELECT * FROM t0 WHERE t0.c0 LIKE '.1%'; -- expected: '.1%', actual: no row is fetched"
    ],
    "title": "LIKE malfunctions for UNIQUE COLLATE NOCASE column"
  },
  {
    "comment": "This problem has existing in the RTRIM collating sequence since it was first introduced in 2008.",
    "date": "14/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f1580ba1b5",
      "fix": "https://www.sqlite.org/src/info/86fa0087cd1f5c79"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 COLLATE RTRIM, c1 BLOB UNIQUE, PRIMARY KEY (c0, c1)) WITHOUT ROWID;",
      "INSERT INTO t0 VALUES (123, 3), (' ', 1), ('\t', 2), ('', 4);",
      "SELECT * FROM t0 WHERE c1 = 1; -- expected: ' ', 1, actual: no row is fetched"
    ],
    "title": "Built-in RTRIM collating sequence yields incorrect comparisons"
  },
  {
    "date": "16/06/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=e1e07ef202",
      "fix": "https://www.sqlite.org/src/info/54110870487f7801"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c3 TEXT);",
      "INSERT INTO t0(c3) VALUES ('0');",
      "SELECT * FROM t0 WHERE (t0.c3 COLLATE NOCASE) BETWEEN 1 AND '5'; -- expected: no row is fetched, actual: row is fetched"
    ],
    "title": "COLLATE in BETWEEN expression is ignored"
  },
  {
    "date": "18/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95866" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE) ENGINE = HEAP;",
      "INSERT INTO t0(c0) VALUES (DEFAULT), (\"a\"), (\"a\");",
      "SELECT (NULL) IN (SELECT t0.c0 FROM t0 WHERE ((t0.c0) OR TRUE) IS NULL); -- unexpected: ERROR 1032 (HY000): Can't find record in 't0'"
    ],
    "title": "\"Can't find record\" error in SELECT statement 2 (HEAP engine)"
  },
  {
    "date": "20/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95889" },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(4294967294);",
      "CREATE INDEX i0 ON t0((ABS(t0.c0))); -- unexpected: ERROR 3752 (22003): Value is out of range for functional index 'i0'"
    ],
    "title": "Functional index seems to malfunction with UNSIGNED column"
  },
  {
    "date": "21/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95908" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TINYINT);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE NOT(t0.c0 <=> 2035382037); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "The negation of a \"<=>\" comparison malfunctions depending on the column's type"
  },
  {
    "comment": "The bug was fixed in 8.0.17, but not necessarily based on our bug report, since it was not referenced.",
    "date": "22/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95926" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES(1);",
      "SELECT * FROM t0 WHERE IF(FALSE, t0.c0, 0.1); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Row is not fetched when using a function expression that should yield TRUE"
  },
  {
    "date": "22/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95927" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": ["SELECT FALSE XOR '0.5'; -- expected: 1, actual: 0"],
    "title": "XOR operator returns incorrect result for strings with a floating-point number"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95937" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT BENCHMARK(NULL, 1); -- expected: 0, actual: NULL",
      "SELECT BENCHMARK(-1, 1); -- expected: 0, actual: NULL"
    ],
    "title": "BENCHMARK() returns NULL in some cases but is documented to always return 0"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95938" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT IGNORE INTO t0(c0) VALUES(\"\\n123\");",
      "SELECT * FROM t0 WHERE COALESCE(t0.c0); -- expected: row is fetched, actual: no row is fetched",
      "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Function return value with newline yields wrong result when used as a boolean"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95942" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(0.9);",
      "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "TEXT column used as boolean incorrectly evaluates to false"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95954" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 BIGINT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT * FROM t0 WHERE CAST(COALESCE(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected",
      "SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected"
    ],
    "title": "CAST of negative function return value to UNSIGNED malfunctions with BIGINT"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95957" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES(-1);",
      "SELECT t0.c0 IN (1, CAST(t0.c0 AS UNSIGNED)) from t0; -- expected: 0, actual: 1"
    ],
    "title": "IN operator issue when comparing signed column and the column cast to unsigned"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.17",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95958" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(\"0.5\");",
      "SELECT * FROM t0 WHERE t0.c0 AND 1; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 OR 0; -- expected: 0.5, actual: no row is fetched",
      "SELECT * FROM t0 WHERE t0.c0 XOR 0;  -- expected: 0.5, actual: no row is fetched"
    ],
    "title": "AND/OR/XOR compute wrong result for small floating-point numbers in TEXT columns"
  },
  {
    "date": "24/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95960" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "SELECT '\\n1' & 1; -- expected: 1, actual: 0",
      "SELECT '\\n1' | 0; -- expected: 1, actual: 0",
      "SELECT '\\n1' ^ 1; -- expected: 0, actual: 1"
    ],
    "title": "The logical operators &, |, and ^ do not ignore newlines in TEXT"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95964" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 INT) ENGINE = MEMORY;",
      "INSERT INTO t0(c0) VALUES(0);",
      "INSERT INTO t1(c0) VALUES(-1);",
      "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "Compare that uses UNSIGNED cast and function malfunctions in the MEMORY engine"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95975" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": ["SELECT \"a\" IN (0); -- expected: 0, actual: 1"],
    "title": "Unexpected result for IN operator and constants"
  },
  {
    "date": "25/06/2019",
    "dbms": "MySQL",
    "links": { "bugtracker": "https://bugs.mysql.com/bug.php?id=95983" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES(-1, \"a\");",
      "SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1; -- expected: fetches row, actual: does not fetch the row"
    ],
    "title": "Query involving &, <, and AND operators computes incorrect result"
  },
  {
    "date": "26/06/2019",
    "dbms": "MySQL",
    "fix_version": "8.0.18",
    "links": { "email": "https://bugs.mysql.com/bug.php?id=96012" },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES (\"a\");",
      "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched"
    ],
    "title": "Query with GREATEST function malfunctions"
  },
  {
    "date": "02/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA7VLKf_vEr6kLF3MnWSA9LToJYncgpNX2tQ-oWzYCBQAw%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/a5be4062f7bf2ae9487c5a31ee337a56425cdc84"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT PRIMARY KEY, c1 INT);",
      "CREATE TABLE t1(c0 INT) INHERITS (t0);",
      "INSERT INTO t0(c0, c1) VALUES(0, 0);",
      "INSERT INTO t1(c0, c1) VALUES(0, 1);",
      "SELECT c0, c1 FROM t0 GROUP BY c0, c1; -- expected: 0|0 and 0|1, actual: 0|0"
    ],
    "title": "GROUP BY and inheritance issue"
  },
  {
    "comment": "This bug was reproduced to occur in \"v11 and quite a large number of branches before that\". The bug was fixed \"somewhat accidentally\" for v12, but backporting the relevant patch was declared to be too invasive.",
    "date": "02/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA4CV21mUfwjQj3va7MWvqB2EAdJT31%3Duf_yArBRVzQjYw%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 boolean UNIQUE);",
      "CREATE INDEX i0 ON t0((nullif(FALSE, TRUE)));",
      "INSERT INTO t0(c0) VALUES(TRUE);",
      "SELECT * FROM t0 WHERE nullif(FALSE, TRUE) OR t0.c0; -- expected: row is fetched, actual: ERROR:  index key does not match expected index column"
    ],
    "title": "SELECT results in \"ERROR: index key does not match expected index column\""
  },
  {
    "comment": "A fix for this seemed to be non-trivial and it was put on the \"back burner until we have some consensus how to proceed on that\".",
    "date": "4/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/CA%2Bu7OA4hkFSV_Y%3DsW_vNcYgKFEoq0WL5GtrBWEHUZnCqSqjhAA%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE UNIQUE INDEX i0 ON t0(c0);",
      "ALTER TABLE t0 ADD PRIMARY KEY USING INDEX i0, ALTER c0 TYPE BIGINT;",
      "-- unexpected: ERROR: could not open relation with OID 43707388"
    ],
    "title": "ALTER TABLE results in \"ERROR: could not open relation with OID 43707388\""
  },
  {
    "date": "27/07/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA4qogDv9rz1HAb-ADxttXYPqQdUdPY_yd4kCzywNxRQXA%40mail.gmail.com"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 boolean);",
      "CREATE TABLE t1(c0 boolean);",
      "CREATE TABLE t2(c0 boolean) INHERITS(t0, t1);",
      "ALTER TABLE t0 ALTER c0 TYPE TEXT;",
      "UPDATE t1 SET c0 = TRUE; -- ERROR:  attribute \"c0\" of relation \"t2\"does not match parent's type"
    ],
    "title": "Multiple inheritance and ALTER TABLE issue"
  },
  {
    "date": "29/07/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ba2f4585cf",
      "fix": "https://www.sqlite.org/src/info/2b221bb15fd2b9f6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Severe",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 REAL, c1);",
      "CREATE UNIQUE INDEX i0 ON t0(c1, 0 | c0);",
      "INSERT INTO t0(c0) VALUES (4750228396194493326), (0);",
      "UPDATE OR REPLACE t0 SET c0 = 'a', c1 = '';",
      "SELECT * FROM t0 ORDER BY t0.c1; -- unexpected: database disk image is malformed"
    ],
    "title": "Query with ORDER BY results in \"database disk image is malformed\" error"
  },
  {
    "date": "02/07/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=41866dc373",
      "fix": "https://www.sqlite.org/src/info/faaaae4940b5f4f7"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE, c1);",
      "INSERT INTO t0(c0, c1) VALUES (NULL, 1);",
      "SELECT MIN(t0.c0), t0.c1 FROM t0; -- expected: NULL | 1, actual: NULL | NULL"
    ],
    "title": "MIN() malfunctions for UNIQUE column"
  },
  {
    "comment": "This bug was fixed 11 years after it was introduced.",
    "date": "03/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=71e183cab6",
      "fix": "https://www.sqlite.org/src/info/d465c3ee"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1);",
      "CREATE INDEX i0 ON t0(c1, c1 + 1 DESC);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT MIN(t0.c1), t0.c0 FROM t0 WHERE t0.c1 ISNULL; -- expected: NULL | 1, actual: NULL | NULL"
    ],
    "title": "MIN() malfunctions for a query with ISNULL condition"
  },
  {
    "date": "05/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d52a29a9e6",
      "fix": "https://www.sqlite.org/src/info/9c8c1092a8ce80e1"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1 TEXT);",
      "CREATE VIEW v0(c0) AS SELECT SUM(t0.c1) FROM t0;",
      "INSERT INTO t0(c0, c1) VALUES ('a', 1);",
      "SELECT * FROM v0, t0 WHERE t0.c1 <= v0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Unexpected affinity conversion in view"
  },
  {
    "date": "05/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=61c853857f",
      "fix1": "https://www.sqlite.org/src/info/09cd0c0c6e6c963e",
      "fix2": "https://www.sqlite.org/src/info/470ac8d50ce2f7cc",
      "fix3": "https://www.sqlite.org/src/info/e15a0977ddfad3d0"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, c1);",
      "INSERT INTO t0(c0, c1) VALUES (-1, 0);",
      "CREATE VIEW v0(c0, c1) AS SELECT t0.c0, AVG(t0.c1) FROM t0;",
      "SELECT * FROM v0 WHERE v0.c1 < v0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Row is not fetched in SELECT from VIEW"
  },
  {
    "date": "06/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0a5e2c1dcb",
      "fix": "https://www.sqlite.org/src/info/17b3d2218c02a400"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t0;",
      "INSERT INTO t0(c0) VALUES ('0');",
      "SELECT 0 IN (c0) FROM v0; -- expected: 0, actual: 1"
    ],
    "title": "Unexpected affinity conversion for view column in IN operator"
  },
  {
    "date": "07/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f8a7060ece",
      "fix": "https://www.sqlite.org/src/info/94085fb3"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE, c1);",
      "INSERT INTO t0(c1) VALUES (0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE VIEW v0(c0, c1) AS SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS INT) = 1;",
      "SELECT v0.c0, MIN(v0.c1) FROM v0; -- expected: 0|, actual: |"
    ],
    "title": "Incorrect result for query that uses MIN() and a CAST on rowid"
  },
  {
    "date": "10/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=9080b6227f",
      "fix": "https://www.sqlite.org/src/info/da01ba4fa47c6508"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE INDEX i0 ON t0(NULL > c0) WHERE (NULL NOT NULL);",
      "SELECT * FROM t0 WHERE ((NULL IS FALSE) IS FALSE); -- expected: row is fetched: actual: row is not fetched"
    ],
    "title": "Constant expression in partial index results in row not being fetched"
  },
  {
    "date": "15/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=256741a16b",
      "fix": "https://www.sqlite.org/src/info/4f5b2d938194fab7"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE EXISTS (SELECT MIN(c0)  OVER (), CUME_DIST() OVER () FROM t0) BETWEEN 1 AND 1;"
    ],
    "title": "Null pointer dereference caused by window functions in result-set of EXISTS(SELECT ...)"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=6710d2f7a1",
      "fix": "https://www.sqlite.org/src/info/500c9152daaf11cf"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT TYPEOF(1) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0), (1);",
      "SELECT * FROM t0 LEFT JOIN v0 ON t0.c0 WHERE NOT(v0.c0 = 'a'); -- unexpected: fetches no row"
    ],
    "title": "LEFT JOIN fails to fetch row"
  },
  {
    "date": "17/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c7a1171907",
      "fix": "https://www.sqlite.org/src/info/43e8b143"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE VIEW v0(c0) AS SELECT LOWER(CAST('1e500' AS TEXT)) FROM t0;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT v0.c0 FROM v0, t0 WHERE t0.rowid NOT IN (0, 0, v0.c0); -- expected: '1e500', actual: Inf"
    ],
    "title": "WHERE clause erroneously influences value of fetched column from view"
  },
  {
    "date": "20/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f043b1130b",
      "fix": "https://www.sqlite.org/src/info/511da081"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0, c1);",
      "CREATE INDEX i0 ON t0(CAST(c0 AS NUMERIC));",
      "INSERT INTO t0(c0, c1) VALUES ('a', -1);",
      "SELECT * FROM t0 INDEXED BY i0 WHERE CAST(t0.c0 AS NUMERIC) > LOWER(t0.c1) GROUP BY t0.rowid; -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "INDEXED BY results in row not being fetched"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=d9f584e936",
      "fix": "https://www.sqlite.org/src/info/81b9f0f55042777b"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER PRIMARY KEY, c1 TEXT);",
      "INSERT INTO t0(c0, c1) VALUES (1, 'a');",
      "SELECT * FROM t0 WHERE '-1' BETWEEN 0 AND t0.c0; -- expected: 1|a, actual: no row is fetched"
    ],
    "title": "Row is not fetched in table with INTEGER PRIMARY KEY"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=ac184eb571",
      "fix": "https://www.sqlite.org/src/info/e62eddbb048cbc2c"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT UNIQUE, c1);",
      "INSERT INTO t0(c0) VALUES (-1);",
      "SELECT * FROM t0 WHERE - x'ce' >= t0.c0; -- unexpected: row is not fetched"
    ],
    "title": "Row with comparison on TEXT UNIQUE column is not fetched"
  },
  {
    "date": "22/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=7e07a3dbf5",
      "fix": "https://www.sqlite.org/src/info/44578865fa7baf97"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "INSERT INTO t0(c0) VALUES ('a');",
      "SELECT * FROM t0 WHERE LIKELY(t0.rowid) <= '0'; -- unexpected: row is not fetched"
    ],
    "title": "LIKELY() seems to cause unexpected affinity conversion for rowid"
  },
  {
    "date": "27/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=dbaf8a6820",
      "fix": "https://www.sqlite.org/src/info/7f5168a76a400fc2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE);",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT * FROM t0 WHERE '1' IN (t0.c0); -- unexpected: fetches row"
    ],
    "title": "Unexpected affinity conversion is performed for the IN operator"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a6408d42b9",
      "fix": "https://www.sqlite.org/src/info/45ff2b1f2693bb02"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;",
      "SELECT * FROM t0 WHERE (t0.c0 IS FALSE) IS FALSE; -- unexpected: row is not fetched"
    ],
    "title": "Partial index causes row to not be fetched"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=fba33c8b1d",
      "fix": "https://www.sqlite.org/src/info/057fb8b1809b8b9c"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1);",
      "CREATE INDEX i0 ON t0(1) WHERE c1 NOTNULL;",
      "INSERT INTO t0(c1) VALUES (NULL);",
      "SELECT * FROM t0 WHERE t0.c1 IS FALSE BETWEEN FALSE AND TRUE; -- unexpected: row is not fetched"
    ],
    "title": "Partial index causes row to not be fetched in BETWEEN expression"
  },
  {
    "date": "30/08/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=f8f472cbc7",
      "fix": "https://www.sqlite.org/src/info/dd66134817ecbda0"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;",
      "INSERT INTO t0(c0) VALUES (NULL);",
      "SELECT * FROM t0 WHERE '' BETWEEN t0.c0 AND 1 IN (FALSE); -- unexpected: row is not fetched"
    ],
    "title": "Partial index and BETWEEN issue"
  },
  {
    "date": "02/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=57af00b664",
      "fix": "https://www.sqlite.org/src/info/0658c16e311393c8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL, c1 TEXT);",
      "CREATE INDEX i0 ON t0(+c0, c0);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT CAST(+ t0.c0 AS BLOB) LIKE 0 FROM t0; -- expected: 0, actual: 1"
    ],
    "title": "Expression computed on row yields incorrect result"
  },
  {
    "date": "02/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=2841e99d10",
      "fix": "https://www.sqlite.org/src/info/88833a9c2849c959"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL UNIQUE);",
      "INSERT INTO t0(c0) VALUES(2.07093491255203046E18);",
      "SELECT * FROM t0 WHERE c0 IN ('2070934912552030444'); -- unexpected: row is fetched"
    ],
    "title": "Different rounding when converting TEXT to REAL"
  },
  {
    "date": "03/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=29f635e0af",
      "fix": "https://www.sqlite.org/src/info/6e7b4527d32cc1be"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, c1 REAL, c2, PRIMARY KEY(c2, c0, c1));",
      "CREATE INDEX i0 ON t0(c1 IN (c0));",
      "INSERT INTO t0(c0, c2) VALUES (0, NULL) ON CONFLICT(c2, c1, c0) DO NOTHING;",
      "UPDATE t0 SET c2 = x'';",
      "SELECT * FROM t0 WHERE t0.c2 IS NULL; -- unexpected: row is fetched"
    ],
    "title": "IS NULL unexpectedly evaluates to TRUE"
  },
  {
    "date": "09/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a7debbe0ad",
      "fix": "https://www.sqlite.org/src/info/b9ec72203c19c2b9"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES('');",
      "CREATE VIEW v2(c0, c1) AS SELECT 'B' COLLATE NOCASE, 'a' FROM t0 ORDER BY t0.c0;",
      "SELECT SUM(count) FROM (SELECT v2.c1 BETWEEN v2.c0 AND v2.c1 as count FROM v2); -- expected: 0, actual: 1"
    ],
    "title": "BETWEEN issue in view"
  },
  {
    "date": "11/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=18458b1ad6",
      "fix": "https://www.sqlite.org/src/info/36997c4ade2ef3a2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 COLLATE NOCASE);",
      "INSERT INTO t0(c0) VALUES ('B');",
      "CREATE VIEW v0(c0, c1) AS SELECT DISTINCT t0.c0, 'a' FROM t0;",
      "SELECT v0.c1 >= v0.c0 FROM v0; -- actual: 1, expected: 0"
    ],
    "title": "COLLATE issue in view"
  },
  {
    "date": "16/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=0f0428096f",
      "fix": "https://www.sqlite.org/src/info/6fe0367f9a337b7c"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0 VALUES (-1);",
      "SELECT * FROM t0 WHERE t0.c0 GLOB '-*'; -- unexpected: row is not fetched"
    ],
    "title": "GLOB unexpectedly does not match"
  },
  {
    "date": "17/09/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=587791f926",
      "fix": "https://www.sqlite.org/src/info/3fb40f518086c1e8"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 PRIMARY KEY, c1);",
      "INSERT INTO t0(c0) VALUES (x'bb'), (0);",
      "SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- 1",
      "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched"
    ],
    "title": "Row is not fetched when using WHERE clause with INSTR()"
  },
  {
    "comment": "We reported this bug on the security mailing list where it was stated that \"next week it'd have been a security issue [since a new PostgreSQL version would have been released], perhaps, but since v12 isn't formally released yet I don't think we need to treat it as one.",
    "date": "24/09/2019",
    "dbms": "PostgreSQL",
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 integer, c1 integer GENERATED ALWAYS AS (t0.c0) STORED);",
      "CREATE TABLE t1(LIKE t0 INCLUDING DEFAULTS);",
      "INSERT INTO t1(c0) VALUES(NULL);"
    ],
    "title": "INSERT INTO causes segfault on trunk"
  },
  {
    "date": "07/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b2d4edaffd",
      "fix": "https://www.sqlite.org/src/info/3cde82c86b963fa7"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0(c0) VALUES (0);",
      "CREATE VIEW v0(c0) AS SELECT t0.rowid FROM t0 ORDER BY 1;",
      "SELECT COUNT(*) FROM v0 WHERE ABS('1') = v0.c0; -- expected: 1, actual: 0"
    ],
    "title": "Comparison on view malfunctions"
  },
  {
    "date": "09/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=a976c487d1",
      "fix": "https://www.sqlite.org/src/info/eb7ed90b8a65748f"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c1);",
      "CREATE TABLE t1(c0);",
      "CREATE VIEW v0 AS SELECT c1 FROM t1 LEFT JOIN t0;",
      "INSERT INTO t1 VALUES (1);",
      "SELECT * FROM v0 WHERE NOT(v0.c1 IS FALSE); -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "LEFT JOIN in view malfunctions"
  },
  {
    "date": "10/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=c31034044b",
      "fix": "https://www.sqlite.org/src/info/7833feecfe745e23"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c1);",
      "INSERT INTO t0(c0) VALUES(0);",
      "CREATE VIEW v0(c0) AS SELECT t1.c1 FROM t0 LEFT JOIN t1;",
      "SELECT * FROM v0 WHERE v0.c0 NOTNULL NOTNULL; -- expected: row is fetched, actual: no row is fetched"
    ],
    "title": "LEFT JOIN in view malfunctions with NOTNULL"
  },
  {
    "date": "22/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b47e3627ec",
      "fix": "https://www.sqlite.org/src/info/90f7c477354d67d2"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 COLLATE NOCASE, c1);",
      "INSERT INTO t0 VALUES('a', 'A');",
      "SELECT * FROM t0 WHERE (+ t0.c1, 1) >= (t0.c0, 1); -- expected: row is not fetched, actual: row is fetched"
    ],
    "title": "Comparison of row values results in incorrect result"
  },
  {
    "date": "22/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=b47e3627ec",
      "fix": "https://www.sqlite.org/src/info/c7da1c01f1f239e6"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 COLLATE NOCASE, c1);",
      "INSERT INTO t0 VALUES('a', 'A');",
      "SELECT * FROM t0 WHERE (+ t0.c1, 1) >= (t0.c0, 1); -- expected: row is not fetched, actual: row is fetched"
    ],
    "title": "Comparison of row values results in incorrect result (incomplete fix)"
  },
  {
    "date": "22/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=6ef984af89",
      "fix": "https://www.sqlite.org/src/info/5c118617cf08e17a"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT PRIMARY KEY);",
      "INSERT INTO t0(c0) VALUES ('');",
      "SELECT * FROM t0 WHERE (t0.c0, TRUE) > (CAST('' AS REAL), FALSE); -- unexpected: row is not fetched"
    ],
    "title": "Row value comparison yields incorrect result"
  },
  {
    "date": "23/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=135c9da751",
      "fix": "https://www.sqlite.org/src/info/978b2d20cf95d0b7"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0(c0) VALUES('a');",
      "SELECT * FROM t0 WHERE (t0.c0, 0) < ('B' COLLATE NOCASE, 0); -- unexpected: row is not fetched"
    ],
    "title": "Comparison of row values with COLLATE NOCASE yields incorrect result"
  },
  {
    "date": "27/10/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=91e8695101",
      "fix": "https://www.sqlite.org/src/info/6d1bbba9a004a249"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INTEGER PRIMARY KEY GENERATED ALWAYS AS(1), c1 UNIQUE GENERATED ALWAYS AS(1), c2 UNIQUE);",
      "INSERT INTO t0 VALUES(NULL); -- Segmentation fault"
    ],
    "title": "Segfault in table with generated columns"
  },
  {
    "date": "3/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=623eff57e7",
      "fix": "https://sqlite.org/src/info/3be19e1151af1850"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "INSERT INTO t1(c0) VALUES (0);",
      "CREATE INDEX i0 ON t0(0) WHERE NULL IN (c0);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t1 LEFT JOIN t0;",
      "SELECT COUNT(*) FROM v0 WHERE NULL IN (v0.c0); -- expected: 0, actual: 1"
    ],
    "title": "LEFT JOIN in view malfunctions with partial index on table"
  },
  {
    "date": "4/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=02aa2bd02f",
      "fix": "https://sqlite.org/src/info/ea20068e6d97c934"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t1 LEFT JOIN t0;",
      "INSERT INTO t1(c0) VALUES (0);",
      "SELECT * FROM v0 WHERE (v0.c0, x'') != (NULL, 0); -- unexpected: row is not fetched"
    ],
    "title": "Row value comparison malfunctions on view with left join"
  },
  {
    "date": "6/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://sqlite.org/src/tktview?name=ce22a07731",
      "fix": "https://sqlite.org/src/info/36c11ad51fe9ab1b"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);",
      "INSERT INTO t0(c1) VALUES (1);",
      "SELECT * FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1; -- unexpected: row is fetched"
    ],
    "title": "NULL WHERE condition unexpectedly results in row being fetched"
  },
  {
    "date": "7/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugtracker": "https://www.sqlite.org/src/tktview?name=299b50ba81",
      "fix": "https://www.sqlite.org/src/info/104a2beb57037f93"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0, c1 AS(c0 + c2), c2 AS(c1) CHECK(c2));",
      "UPDATE t0 SET c0 = NULL; -- Segmentation fault"
    ],
    "title": "UPDATE on table with two generated columns and CHECK clause results in segfault"
  },
  {
    "date": "13/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA4HOjtymxAbuGNh4-X_2R0Lw5n01tzvP8E5-i-2gQXYWA%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/d57d61533a2b5b27b60cc9024c54688390871bf6"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHAR(2) COLLATE \"C\", c1 CHAR(2) COLLATE \"POSIX\");",
      "INSERT INTO t0 VALUES('', '');",
      "SELECT * FROM t0 WHERE t0.c1 NOT IN (t0.c0); -- unexpected: cache lookup failed for collation 0"
    ],
    "title": "Unexpected \"cache lookup failed for collation 0\" failure"
  },
  {
    "date": "19/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA7nnGYy8rY0vdTe811NuA%2BFrr9nbcBO9u2Z%2BJxqNaud%2Bg%40mail.gmail.com",
      "fix": "https://github.com/postgres/postgres/commit/b3c265d7be42484bd0ab4a9c0a920289e8f5c995",
      "improvement 1": "https://github.com/postgres/postgres/commit/2ddedcafca116c99e08c777ab2ab3a4de6f00c7e",
      "improvement 2": "https://github.com/postgres/postgres/commit/9ff5b699ed3e2d922ff6f5660e53b51bb5db983c"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "CREATE INDEX i0 ON t0(c0 bpchar_ops);",
      "SELECT * FROM t0 WHERE t0.c0 LIKE ''; -- ERROR:  no = operator for opfamily 426"
    ],
    "title": "No = operator for opfamily 426"
  },
  {
    "date": "22/11/2019",
    "dbms": "PostgreSQL",
    "links": {
      "fix": "https://github.com/postgres/postgres/commit/c35b714caff008c875b484656de7d168a7bc45f9"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TEMP TABLE t0(c0 int) ON COMMIT DELETE ROWS;",
      "CREATE INDEX i0 ON t0(bit_length('')); -- Segmentation fault"
    ],
    "title": "Segfault when creating constant bit_length() index on TEMP table"
  },
  {
    "date": "30/11/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=7f39060a24",
      "fix": "https://www.sqlite.org/src/info/4066a34da7bcdcec"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "CREATE INDEX i0 ON t0(1) WHERE c0 ISNULL;",
      "INSERT INTO t0(c0) VALUES (1);",
      "INSERT INTO t1(c0) VALUES (1);",
      "SELECT * FROM t1 LEFT JOIN t0 WHERE t0.c0 ISNULL; -- unexpected: row is fetched"
    ],
    "title": "LEFT JOIN malfunctions with partial ISNULL index"
  },
  {
    "date": "02/12/2019",
    "dbms": "PostgreSQL",
    "links": {
      "email": "https://www.postgresql.org/message-id/flat/CA%2Bu7OA5TwqWTrvRoFOF1Vipf5WpfcbQYwtLGzNVXGwa6Ptor9w%40mail.gmail.com"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT COLLATE \"POSIX\");",
      "CREATE VIEW v0(c0) AS (SELECT (t0.c0 COLLATE \"C\")::INT FROM t0); -- FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)"
    ],
    "title": "FailedAssertion(\"!OidIsValid(def->collOid)\", File: \"view.c\", Line: 89)"
  },
  {
    "date": "08/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b92e5e8ec2",
      "fix": "https://www.sqlite.org/src/info/9d75e1ccc72e9f53"
    },
    "oracle": "error",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 AS (1), c1);",
      "CREATE TABLE t1(c0);",
      "SELECT * FROM t0, t1 WHERE t0.c0 == 0; -- out of memory"
    ],
    "title": "Query on table without rows and generated column results in \"out of memory\" error"
  },
  {
    "date": "16/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=3b84b42943",
      "fix": "https://www.sqlite.org/src/info/0271491438ad2a98"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0, c1 AS(1));",
      "INSERT INTO t0 VALUES(0);",
      "SELECT t1.c1 IS TRUE FROM t0 LEFT JOIN t1; -- expected: 0, actual: 1"
    ],
    "title": "LEFT JOIN malfunctions with generated column"
  },
  {
    "date": "20/12/2019",
    "dbms": "SQLite",
    "links": { "fix": "https://www.sqlite.org/src/info/3cc2b5709e66ef60" },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0, c1 UNIQUE);",
      "INSERT INTO t0(c0) VALUES(NULL);",
      "SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(0) FILTER(WHERE t1.c1)); -- segmentation fault"
    ],
    "title": "FILTER clause in window function causes a segfault"
  },
  {
    "date": "20/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=e0a8120553",
      "fix": "https://sqlite.org/src/info/728ad39e3bd07a25"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL AS(1) UNIQUE, c1 INT);",
      "INSERT INTO t0 VALUES('');",
      "SELECT * FROM t0 WHERE (1 BETWEEN CAST(t0.c0 AS TEXT) AND t0.c0); -- unexpected: row is fetched"
    ],
    "title": "Incorrect result for BETWEEN and generated column"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=f00d096cae",
      "fix": "https://sqlite.org/src/info/8c856404b4e98d29"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "INSERT INTO t0 VALUES(0);",
      "SELECT * FROM t0 WHERE (0, t0.c0) IN(SELECT DENSE_RANK() OVER(), LAG(0) OVER() FROM t0); -- sqlite3.c:87244: sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `memIsValid(pRec)' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=d9ed4ebef1",
      "fix": "https://www.sqlite.org/src/info/0b1dbd60f5db3abe"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "SELECT * FROM t0 WHERE(c0, 0) IN(SELECT FIRST_VALUE(0) OVER(), 0); -- Segmentation fault"
    ],
    "title": "SELECT on window function causes a segfault"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=1b06916e01",
      "fix": "https://sqlite.org/src/info/ddb17d92df194337"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHECK(c1 IN(c1)), c1 INT);",
      "INSERT INTO t0(c1) VALUES('0'); -- sqlite3.c:86300: sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=b0cb8aff56",
      "fix": "https://sqlite.org/src/info/56539e1c132632c0"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE INDEX i0 ON t0((c0 NOTNULL) COLLATE BINARY);",
      "SELECT * FROM t0 WHERE(c0 NOTNULL) COLLATE BINARY BETWEEN 0 AND c0; -- sqlite3.c:98025: sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed."
    ],
    "title": "Debug assertion sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed"
  },
  {
    "date": "22/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=188f912b51",
      "fix": "https://sqlite.org/src/info/9ab985a9c8160b90"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, CHECK(c0 IN (c0)));",
      "INSERT INTO t0 VALUES(0);",
      "UPDATE t0 SET c0 = 0; -- sqlite3.c:86323: sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=9d708e4742",
      "fix": "https://www.sqlite.org/src/info/2c44c73499154bc5"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT, CHECK(CASE c0 WHEN c0 THEN 0 END));",
      "INSERT INTO t0 VALUES('0'); -- sqlite3.c:86300: sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `flags3==pIn3->flags' failed (2)"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=3ab4a9f02c",
      "fix": "https://www.sqlite.org/src/info/0b1dbd60"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE);",
      "SELECT * FROM t0 WHERE (t0.c0, 1) IN(SELECT NTILE(1) OVER(), 0 FROM t0); -- sqlite3.c:90197: sqlite3VdbeExec: Assertion `pC!=0' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pC!=0' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=dfd66334cf",
      "fix": "https://sqlite.org/src/info/2f17974912ec5e99"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Critical",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "CREATE TABLE t1(c0);",
      "SELECT * FROM t0 LEFT JOIN t1 WHERE (t1.c0 BETWEEN 0 AND 0) > ('' AND t0.c0); -- sqlite3.c:103271: impliesNotNullRow: Assertion `pWalker->eCode==0' failed."
    ],
    "title": "Debug assertion impliesNotNullRow: Assertion `pWalker->eCode==0' failed"
  },
  {
    "date": "23/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=b383b90278",
      "fix": "https://sqlite.org/src/info/401c9d30e06191d9"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 TEXT, CHECK(c0 BETWEEN 0 AND +c0));",
      "INSERT INTO t0 VALUES (0);",
      "UPDATE t0 SET c0 = 0; -- sqlite3.c:86402: sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed."
    ],
    "title": "Debug assertion sqlite3VdbeExec: Assertion `pIn1!=pIn3' failed (2)"
  },
  {
    "date": "26/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=ec8abb025e",
      "fix": "https://www.sqlite.org/src/info/e54560495926fbb8"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 UNIQUE AS(0), c1, c2);",
      "INSERT INTO t0(c1) VALUES(0);",
      "UPDATE t0 SET c1 = 0, c2 = 0 WHERE(c0) >= 0; -- sqlite3.c:72305: sqlite3BtreeInsert: Assertion `pCur->curFlags & BTCF_ValidNKey' failed."
    ],
    "title": "Debug assertion sqlite3BtreeInsert: Assertion `pCur->curFlags & BTCF_ValidNKey' failed"
  },
  {
    "date": "26/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=7c13db5c3b",
      "fix": "https://www.sqlite.org/src/info/f14ce948662f3445"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 PRIMARY KEY, c1, c2 UNIQUE) WITHOUT ROWID;",
      "INSERT OR FAIL INTO t0(c2) VALUES (0), (NULL) ON CONFLICT(c2) DO UPDATE SET c1 = c0; -- sqlite3.c:108474: sqlite3FinishCoding: Assertion `!pParse->isMultiWrite || sqlite3VdbeAssertMayAbort(v, pParse->mayAbort)' failed."
    ],
    "title": "Debug assertion sqlite3FinishCoding: Assertion `!pParse->isMultiWrite || sqlite3VdbeAssertMayAbort(v, pParse->mayAbort)' failed"
  },
  {
    "date": "28/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://sqlite.org/src/tktview?name=36ffedcb9a",
      "fix": "https://sqlite.org/src/info/597896ed0ae9e296"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "SELECT (0, 0) IN(SELECT MIN(c0), NTILE(0) OVER()) FROM t0; -- sqlite3.c:103486: exprSrcCount: Assertion `0' failed."
    ],
    "title": "Debug assertion exprSrcCount: Assertion `0' failed"
  },
  {
    "comment": "Since we reported this bug 18 minutes after it was introduced, Richard Hipp sent a post titled '18 minutes 41 seconds' to the SQLite mailing list (see https://www.sqlite.org/src/info/f481636f1a0333c6)",
    "date": "30/12/2019",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=892575cdba",
      "fix": "https://www.sqlite.org/src/info/f481636f1a0333c6"
    },
    "oracle": "crash",
    "reporter": "Manuel Rigger",
    "severity": "Minor",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 CHECK(((0, 0) > (0, c0))));",
      "INSERT INTO t0(c0) VALUES(0) ON CONFLICT(c0) DO UPDATE SET c0 = 3; -- sqlite3.c:98717: codeVectorCompare: Assertion `0' failed."
    ],
    "title": "Debug assertion codeVectorCompare: Assertion `0' failed"
  },
  {
    "date": "08/01/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=82ac75ba00",
      "fix": "https://www.sqlite.org/src/info/6db1c3498f6bfa01"
    },
    "oracle": "NoREC",
    "reporter": "Manuel Rigger",
    "severity": "Important",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0);",
      "INSERT INTO t0 VALUES('0');",
      "CREATE VIEW v0(c0) AS SELECT CAST(0 AS INT) FROM t0;",
      "SELECT * FROM t0, v0 WHERE 0 >= t0.c0 AND t0.c0 = v0.c0; -- unexpected: fetches row"
    ],
    "title": "Incorrect result for query with 0 >= t0.c0 AND t0.c0 = v0.c0 condition"
  },
  {
    "date": "10/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=e0c2ad1aa8",
      "fix": "https://www.sqlite.org/src/info/101f7dea75a203f1"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 REAL, c1 REAL GENERATED ALWAYS AS (c0));",
      "INSERT INTO t0(c0) VALUES (1);",
      "SELECT * FROM t0 GROUP BY c0; -- expected: 1.0|1.0, actual: 1.0|1",
      "SELECT * FROM t0; -- 1.0|1.0"
    ],
    "title": "GROUP BY causes unexpected conversion"
  },
  {
    "date": "05/03/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=fa146dcfe6",
      "fix": "https://www.sqlite.org/docsrc/info/e751b0c91a80dd31"
    },
    "oracle": "TLP (aggregate)",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": [
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 1) COLLATE NOCASE as a UNION SELECT CHAR(0, 0) as a); -- 0000",
      "SELECT HEX(MIN(a)) FROM (SELECT CHAR(0, 0) COLLATE NOCASE as a UNION SELECT CHAR(0, 1) as a); -- 0001"
    ],
    "title": "Unexpected result for MIN on string that contains a null character"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "fixed_version": "8.0.21",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99122" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE TABLE t1(c0 DOUBLE);",
      "INSERT INTO t0 VALUES(0);",
      "INSERT INTO t1 VALUES('-0');",
      "SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0; -- expected: {0, -0}, actual: {}"
    ],
    "title": "A predicate that compares 0 with -0 yields an incorrect result",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99127" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNSIGNED);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT * FROM t0 WHERE 0.9 > t0.c0; -- expected: {0}, actual: {}"
    ],
    "title": "Incorrect result when comparing an UNSIGNED INT with a floating-point number",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99130" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT, c1 INT UNIQUE);",
      "INSERT INTO t0(c1) VALUES(1);",
      "SELECT * FROM t0 WHERE t0.c1 BETWEEN 0 AND (\"\\n2\"); -- expected: {NULL, 1}, actual: {}"
    ],
    "title": "BETWEEN malfunctions when comparing a string containing a newline",
    "version": "8.0.19"
  },
  {
    "date": "31/03/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99135" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT UNIQUE);",
      "INSERT INTO t0(c0) VALUES(0);",
      "SELECT * FROM t0 WHERE t0.c0 BETWEEN 18446744073561222871 AND 0; -- expected: {0}, actual: {}?"
    ],
    "title": "BETWEEN malfunctions when comparing large numbers",
    "version": "8.0.19"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99145" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE 0.9 > t0.c0; -- expected: {0}, actual: {}"
    ],
    "title": "Incorrect result when comparing a floating-point number with an integer"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99146" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 FLOAT UNIQUE);",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 WHERE t0.c0 BETWEEN 0 AND '1e500'; -- expected: {0}, actual: {}"
    ],
    "title": "Comparison on FLOAT column and large value malfunctions"
  },
  {
    "date": "01/04/2020",
    "dbms": "MySQL",
    "links": { "bugreport": "https://bugs.mysql.com/bug.php?id=99149" },
    "oracle": "TLP (WHERE)",
    "reporter": "Manuel Rigger",
    "status": "verified",
    "test": [
      "CREATE TABLE t0(c0 TEXT);",
      "INSERT INTO t0(c0) VALUES(0);",
      "CREATE INDEX i0 ON t0(c0(1));",
      "SELECT * FROM t0 WHERE t0.c0 NOT BETWEEN '\u05a3a' AND NULL; -- expected: {0}, actual: {}"
    ],
    "title": "BETWEEN query malfunctions for special character and TEXT index"
  },
  {
    "date": "25/04/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=45f4bf4eb4",
      "fix": "https://www.sqlite.org/src/info/ac31edd3eeafcef4"
    },
    "oracle": "TLP (DISTINCT)",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": [
      "CREATE TABLE t0(c0 INT);",
      "CREATE VIEW v0(c0) AS SELECT CAST(t0.c0 AS INTEGER) FROM t0;",
      "INSERT INTO t0(c0) VALUES (0);",
      "SELECT * FROM t0 LEFT JOIN v0 ON v0.c0 >= '0' WHERE TRUE UNION SELECT 0,0 WHERE 0; -- expected: {0|0}, actual:{0|NULL}"
    ],
    "title": "UNION operator malfunctions in LEFT JOIN on view"
  },
  {
    "date": "24/08/2020",
    "dbms": "SQLite",
    "links": {
      "bugreports": "https://www.sqlite.org/src/tktview?name=f3ff147288",
      "fix": "https://www.sqlite.org/src/info/4236103379df0b3d"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed",
    "test": ["SELECT (1 IN (2 IS TRUE)); -- expected: {1}, actual: {0}"],
    "title": "Incorrect result for IN expression with right-hand IS TRUE sub-expression"
  },
  {
    "date": "27/08/2020",
    "dbms": "SQLite",
    "links": {
      "bugreport": "https://www.sqlite.org/src/tktview?name=be31cf009c",
      "fix": "https://www.sqlite.org/docsrc/info/153857859d220dbd"
    },
    "oracle": "PQS",
    "reporter": "Manuel Rigger",
    "status": "fixed (in documentation)",
    "test": ["SELECT 1 % '1E1'; -- expected: {1.0}, actual: {0.0}"],
    "title": "Unexpected result for % and '1E1'"
  }
]
